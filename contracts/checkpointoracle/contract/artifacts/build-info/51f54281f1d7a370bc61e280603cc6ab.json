{
	"id": "51f54281f1d7a370bc61e280603cc6ab",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.0",
	"solcLongVersion": "0.6.0+commit.26b70077",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/checkpointoracle/contract/oracle.sol": {
				"content": "pragma solidity ^0.6.0;\n\n/**\n * @title CheckpointOracle\n * @author Gary Rong<garyrong@ethereum.org>, Martin Swende <martin.swende@ethereum.org>\n * @dev Implementation of the blockchain checkpoint registrar.\n */\ncontract CheckpointOracle {\n    /*\n        Events\n    */\n\n    // NewCheckpointVote is emitted when a new checkpoint proposal receives a vote.\n    event NewCheckpointVote(uint64 indexed index, bytes32 checkpointHash, uint8 v, bytes32 r, bytes32 s);\n\n    /*\n        Public Functions\n    */\n    constructor(address[] memory _adminlist, uint _sectionSize, uint _processConfirms, uint _threshold) public {\n        for (uint i = 0; i < _adminlist.length; i++) {\n            admins[_adminlist[i]] = true;\n            adminList.push(_adminlist[i]);\n        }\n        sectionSize = _sectionSize;\n        processConfirms = _processConfirms;\n        threshold = _threshold;\n    }\n\n    /**\n     * @dev Get latest stable checkpoint information.\n     * @return section index\n     * @return checkpoint hash\n     * @return block height associated with checkpoint\n     */\n    function GetLatestCheckpoint()\n    view\n    public\n    returns(uint64, bytes32, uint) {\n        return (sectionIndex, hash, height);\n    }\n\n    // SetCheckpoint sets  a new checkpoint. It accepts a list of signatures\n    // @_recentNumber: a recent blocknumber, for replay protection\n    // @_recentHash : the hash of `_recentNumber`\n    // @_hash : the hash to set at _sectionIndex\n    // @_sectionIndex : the section index to set\n    // @v : the list of v-values\n    // @r : the list or r-values\n    // @s : the list of s-values\n    function SetCheckpoint(\n        uint _recentNumber,\n        bytes32 _recentHash,\n        bytes32 _hash,\n        uint64 _sectionIndex,\n        uint8[] memory v,\n        bytes32[] memory r,\n        bytes32[] memory s)\n        public\n        returns (bool)\n    {\n        // Ensure the sender is authorized.\n        require(admins[msg.sender]);\n\n        // These checks replay protection, so it cannot be replayed on forks,\n        // accidentally or intentionally\n        require(blockhash(_recentNumber) == _recentHash);\n\n        // Ensure the batch of signatures are valid.\n        require(v.length == r.length);\n        require(v.length == s.length);\n\n        // Filter out \"future\" checkpoint.\n        if (block.number < (_sectionIndex+1)*sectionSize+processConfirms) {\n            return false;\n        }\n        // Filter out \"old\" announcement\n        if (_sectionIndex < sectionIndex) {\n            return false;\n        }\n        // Filter out \"stale\" announcement\n        if (_sectionIndex == sectionIndex && (_sectionIndex != 0 || height != 0)) {\n            return false;\n        }\n        // Filter out \"invalid\" announcement\n        if (_hash == \"\"){\n            return false;\n        }\n\n        // EIP 191 style signatures\n        //\n        // Arguments when calculating hash to validate\n        // 1: byte(0x19) - the initial 0x19 byte\n        // 2: byte(0) - the version byte (data with intended validator)\n        // 3: this - the validator address\n        // --  Application specific data\n        // 4 : checkpoint section_index(uint64)\n        // 5 : checkpoint hash (bytes32)\n        //     hash = keccak256(checkpoint_index, section_head, cht_root, bloom_root)\n        bytes32 signedHash = keccak256(abi.encodePacked(byte(0x19), byte(0), this, _sectionIndex, _hash));\n\n        address lastVoter = address(0);\n\n        // In order for us not to have to maintain a mapping of who has already\n        // voted, and we don't want to count a vote twice, the signatures must\n        // be submitted in strict ordering.\n        for (uint idx = 0; idx < v.length; idx++){\n            address signer = ecrecover(signedHash, v[idx], r[idx], s[idx]);\n            require(admins[signer]);\n            require(uint256(signer) > uint256(lastVoter));\n            lastVoter = signer;\n            emit NewCheckpointVote(_sectionIndex, _hash, v[idx], r[idx], s[idx]);\n\n            // Sufficient signatures present, update latest checkpoint.\n            if (idx+1 >= threshold){\n                hash = _hash;\n                height = block.number;\n                sectionIndex = _sectionIndex;\n                return true;\n            }\n        }\n        // We shouldn't wind up here, reverting un-emits the events\n        revert();\n    }\n\n    /**\n     * @dev Get all admin addresses\n     * @return address list\n     */\n    function GetAllAdmin()\n    public\n    view\n    returns(address[] memory)\n    {\n        address[] memory ret = new address[](adminList.length);\n        for (uint i = 0; i < adminList.length; i++) {\n            ret[i] = adminList[i];\n        }\n        return ret;\n    }\n\n    /*\n        Fields\n    */\n    // A map of admin users who have the permission to update CHT and bloom Trie root\n    mapping(address => bool) admins;\n\n    // A list of admin users so that we can obtain all admin users.\n    address[] adminList;\n\n    // Latest stored section id\n    uint64 sectionIndex;\n\n    // The block height associated with latest registered checkpoint.\n    uint height;\n\n    // The hash of latest registered checkpoint.\n    bytes32 hash;\n\n    // The frequency for creating a checkpoint\n    //\n    // The default value should be the same as the checkpoint size(32768) in the ethereum.\n    uint sectionSize;\n\n    // The number of confirmations needed before a checkpoint can be registered.\n    // We have to make sure the checkpoint registered will not be invalid due to\n    // chain reorg.\n    //\n    // The default value should be the same as the checkpoint process confirmations(256)\n    // in the ethereum.\n    uint processConfirms;\n\n    // The required signatures to finalize a stable checkpoint.\n    uint threshold;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/checkpointoracle/contract/oracle.sol": {
				"CheckpointOracle": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_adminlist",
									"type": "address[]"
								},
								{
									"internalType": "uint256",
									"name": "_sectionSize",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_processConfirms",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_threshold",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint64",
									"name": "index",
									"type": "uint64"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "checkpointHash",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "NewCheckpointVote",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "GetAllAdmin",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "GetLatestCheckpoint",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								},
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_recentNumber",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "_recentHash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "_hash",
									"type": "bytes32"
								},
								{
									"internalType": "uint64",
									"name": "_sectionIndex",
									"type": "uint64"
								},
								{
									"internalType": "uint8[]",
									"name": "v",
									"type": "uint8[]"
								},
								{
									"internalType": "bytes32[]",
									"name": "r",
									"type": "bytes32[]"
								},
								{
									"internalType": "bytes32[]",
									"name": "s",
									"type": "bytes32[]"
								}
							],
							"name": "SetCheckpoint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Gary Rong<garyrong@ethereum.org>, Martin Swende <martin.swende@ethereum.org>",
						"details": "Implementation of the blockchain checkpoint registrar.",
						"methods": {
							"GetAllAdmin()": {
								"details": "Get all admin addresses",
								"returns": {
									"_0": "address list"
								}
							},
							"GetLatestCheckpoint()": {
								"details": "Get latest stable checkpoint information.",
								"returns": {
									"_0": "section index",
									"_1": "checkpoint hash",
									"_2": "block height associated with checkpoint"
								}
							}
						},
						"title": "CheckpointOracle"
					},
					"evm": {
						"assembly": "    /* \"contracts/checkpointoracle/contract/oracle.sol\":211:5742  contract CheckpointOracle {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/checkpointoracle/contract/oracle.sol\":503:879  constructor(address[] memory _adminlist, uint _sectionSize, uint _processConfirms, uint _threshold) public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/checkpointoracle/contract/oracle.sol\":503:879  constructor(address[] memory _adminlist, uint _sectionSize, uint _processConfirms, uint _threshold) public {... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":13:16   */\n  0x80\n    /* \"--CODEGEN--\":8:11   */\n  dup2\n    /* \"--CODEGEN--\":5:17   */\n  lt\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_2:\n    /* \"contracts/checkpointoracle/contract/oracle.sol\":503:879  constructor(address[] memory _adminlist, uint _sectionSize, uint _processConfirms, uint _threshold) public {... */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n    /* \"--CODEGEN--\":19:30   */\n  0x0100000000\n    /* \"--CODEGEN--\":14:17   */\n  dup3\n    /* \"--CODEGEN--\":11:31   */\n  gt\n    /* \"--CODEGEN--\":8:10   */\n  iszero\n  tag_3\n  jumpi\n    /* \"--CODEGEN--\":44:45   */\n  0x00\n    /* \"--CODEGEN--\":41:42   */\n  dup1\n    /* \"--CODEGEN--\":34:46   */\n  revert\n    /* \"--CODEGEN--\":8:10   */\ntag_3:\n    /* \"--CODEGEN--\":71:82   */\n  dup4\n    /* \"--CODEGEN--\":66:69   */\n  dup3\n    /* \"--CODEGEN--\":62:83   */\n  add\n    /* \"--CODEGEN--\":55:83   */\n  swap2\n  pop\n    /* \"--CODEGEN--\":123:127   */\n  0x20\n    /* \"--CODEGEN--\":118:121   */\n  dup3\n    /* \"--CODEGEN--\":114:128   */\n  add\n    /* \"--CODEGEN--\":159:168   */\n  dup6\n    /* \"--CODEGEN--\":141:157   */\n  dup2\n    /* \"--CODEGEN--\":138:169   */\n  gt\n    /* \"--CODEGEN--\":135:137   */\n  iszero\n  tag_4\n  jumpi\n    /* \"--CODEGEN--\":182:183   */\n  0x00\n    /* \"--CODEGEN--\":179:180   */\n  dup1\n    /* \"--CODEGEN--\":172:184   */\n  revert\n    /* \"--CODEGEN--\":135:137   */\ntag_4:\n    /* \"--CODEGEN--\":219:222   */\n  dup3\n    /* \"--CODEGEN--\":213:223   */\n  mload\n    /* \"--CODEGEN--\":331:340   */\n  dup7\n    /* \"--CODEGEN--\":325:327   */\n  0x20\n    /* \"--CODEGEN--\":311:323   */\n  dup3\n    /* \"--CODEGEN--\":307:328   */\n  mul\n    /* \"--CODEGEN--\":289:305   */\n  dup4\n    /* \"--CODEGEN--\":285:329   */\n  add\n    /* \"--CODEGEN--\":282:341   */\n  gt\n    /* \"--CODEGEN--\":261:272   */\n  0x0100000000\n    /* \"--CODEGEN--\":247:259   */\n  dup3\n    /* \"--CODEGEN--\":244:273   */\n  gt\n    /* \"--CODEGEN--\":233:349   */\n  or\n    /* \"--CODEGEN--\":230:232   */\n  iszero\n  tag_5\n  jumpi\n    /* \"--CODEGEN--\":362:363   */\n  0x00\n    /* \"--CODEGEN--\":359:360   */\n  dup1\n    /* \"--CODEGEN--\":352:364   */\n  revert\n    /* \"--CODEGEN--\":230:232   */\ntag_5:\n    /* \"--CODEGEN--\":385:397   */\n  dup1\n    /* \"--CODEGEN--\":380:383   */\n  dup4\n    /* \"--CODEGEN--\":373:398   */\n  mstore\n    /* \"--CODEGEN--\":421:425   */\n  0x20\n    /* \"--CODEGEN--\":416:419   */\n  dup4\n    /* \"--CODEGEN--\":412:426   */\n  add\n    /* \"--CODEGEN--\":405:426   */\n  swap3\n  pop\n    /* \"--CODEGEN--\":0:433   */\n  pop\n  pop\n    /* \"contracts/checkpointoracle/contract/oracle.sol\":503:879  constructor(address[] memory _adminlist, uint _sectionSize, uint _processConfirms, uint _threshold) public {... */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  0x20\n  mul\n  dup1\n  dup4\n  dup4\n    /* \"--CODEGEN--\":23:24   */\n  0x00\n    /* \"--CODEGEN--\":8:108   */\ntag_6:\n    /* \"--CODEGEN--\":33:36   */\n  dup4\n    /* \"--CODEGEN--\":30:31   */\n  dup2\n    /* \"--CODEGEN--\":27:37   */\n  lt\n    /* \"--CODEGEN--\":8:108   */\n  iszero\n  tag_8\n  jumpi\n    /* \"--CODEGEN--\":99:100   */\n  dup1\n    /* \"--CODEGEN--\":94:97   */\n  dup3\n    /* \"--CODEGEN--\":90:101   */\n  add\n    /* \"--CODEGEN--\":84:102   */\n  mload\n    /* \"--CODEGEN--\":80:81   */\n  dup2\n    /* \"--CODEGEN--\":75:78   */\n  dup5\n    /* \"--CODEGEN--\":71:82   */\n  add\n    /* \"--CODEGEN--\":64:103   */\n  mstore\n    /* \"--CODEGEN--\":52:54   */\n  0x20\n    /* \"--CODEGEN--\":49:50   */\n  dup2\n    /* \"--CODEGEN--\":45:55   */\n  add\n    /* \"--CODEGEN--\":40:55   */\n  swap1\n  pop\n    /* \"--CODEGEN--\":8:108   */\n  jump(tag_6)\ntag_8:\n    /* \"--CODEGEN--\":12:26   */\n  pop\n    /* \"contracts/checkpointoracle/contract/oracle.sol\":503:879  constructor(address[] memory _adminlist, uint _sectionSize, uint _processConfirms, uint _threshold) public {... */\n  pop\n  pop\n  pop\n  swap1\n  pop\n  add\n  0x40\n  mstore\n  0x20\n  add\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"contracts/checkpointoracle/contract/oracle.sol\":625:631  uint i */\n  0x00\n    /* \"contracts/checkpointoracle/contract/oracle.sol\":634:635  0 */\n  dup1\n    /* \"contracts/checkpointoracle/contract/oracle.sol\":625:635  uint i = 0 */\n  swap1\n  pop\n    /* \"contracts/checkpointoracle/contract/oracle.sol\":620:761  for (uint i = 0; i < _adminlist.length; i++) {... */\ntag_11:\n    /* \"contracts/checkpointoracle/contract/oracle.sol\":641:651  _adminlist */\n  dup5\n    /* \"contracts/checkpointoracle/contract/oracle.sol\":641:658  _adminlist.length */\n  mload\n    /* \"contracts/checkpointoracle/contract/oracle.sol\":637:638  i */\n  dup2\n    /* \"contracts/checkpointoracle/contract/oracle.sol\":637:658  i < _adminlist.length */\n  lt\n    /* \"contracts/checkpointoracle/contract/oracle.sol\":620:761  for (uint i = 0; i < _adminlist.length; i++) {... */\n  iszero\n  tag_12\n  jumpi\n    /* \"contracts/checkpointoracle/contract/oracle.sol\":703:707  true */\n  0x01\n    /* \"contracts/checkpointoracle/contract/oracle.sol\":679:685  admins */\n  0x00\n    /* \"contracts/checkpointoracle/contract/oracle.sol\":679:700  admins[_adminlist[i]] */\n  dup1\n    /* \"contracts/checkpointoracle/contract/oracle.sol\":686:696  _adminlist */\n  dup8\n    /* \"contracts/checkpointoracle/contract/oracle.sol\":697:698  i */\n  dup5\n    /* \"contracts/checkpointoracle/contract/oracle.sol\":686:699  _adminlist[i] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_14\n  jumpi\n  invalid\ntag_14:\n  0x20\n  mul\n  0x20\n  add\n  add\n  mload\n    /* \"contracts/checkpointoracle/contract/oracle.sol\":679:700  admins[_adminlist[i]] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"contracts/checkpointoracle/contract/oracle.sol\":679:707  admins[_adminlist[i]] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/checkpointoracle/contract/oracle.sol\":721:730  adminList */\n  0x01\n    /* \"contracts/checkpointoracle/contract/oracle.sol\":736:746  _adminlist */\n  dup6\n    /* \"contracts/checkpointoracle/contract/oracle.sol\":747:748  i */\n  dup3\n    /* \"contracts/checkpointoracle/contract/oracle.sol\":736:749  _adminlist[i] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_15\n  jumpi\n  invalid\ntag_15:\n  0x20\n  mul\n  0x20\n  add\n  add\n  mload\n    /* \"contracts/checkpointoracle/contract/oracle.sol\":721:750  adminList.push(_adminlist[i]) */\n  swap1\n  dup1\n    /* \"--CODEGEN--\":39:40   */\n  0x01\n    /* \"--CODEGEN--\":33:36   */\n  dup2\n    /* \"--CODEGEN--\":27:37   */\n  sload\n    /* \"--CODEGEN--\":23:41   */\n  add\n    /* \"--CODEGEN--\":57:67   */\n  dup1\n    /* \"--CODEGEN--\":52:55   */\n  dup3\n    /* \"--CODEGEN--\":45:68   */\n  sstore\n    /* \"--CODEGEN--\":79:89   */\n  dup1\n    /* \"--CODEGEN--\":72:89   */\n  swap2\n  pop\n    /* \"--CODEGEN--\":0:93   */\n  pop\n    /* \"contracts/checkpointoracle/contract/oracle.sol\":721:750  adminList.push(_adminlist[i]) */\n  0x01\n  swap1\n  sub\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  add\n  0x00\n  swap1\n  swap2\n  swap1\n  swap2\n  swap1\n  swap2\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/checkpointoracle/contract/oracle.sol\":660:663  i++ */\n  dup1\n  dup1\n  0x01\n  add\n  swap2\n  pop\n  pop\n    /* \"contracts/checkpointoracle/contract/oracle.sol\":620:761  for (uint i = 0; i < _adminlist.length; i++) {... */\n  jump(tag_11)\ntag_12:\n  pop\n    /* \"contracts/checkpointoracle/contract/oracle.sol\":784:796  _sectionSize */\n  dup3\n    /* \"contracts/checkpointoracle/contract/oracle.sol\":770:781  sectionSize */\n  0x05\n    /* \"contracts/checkpointoracle/contract/oracle.sol\":770:796  sectionSize = _sectionSize */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/checkpointoracle/contract/oracle.sol\":824:840  _processConfirms */\n  dup2\n    /* \"contracts/checkpointoracle/contract/oracle.sol\":806:821  processConfirms */\n  0x06\n    /* \"contracts/checkpointoracle/contract/oracle.sol\":806:840  processConfirms = _processConfirms */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/checkpointoracle/contract/oracle.sol\":862:872  _threshold */\n  dup1\n    /* \"contracts/checkpointoracle/contract/oracle.sol\":850:859  threshold */\n  0x07\n    /* \"contracts/checkpointoracle/contract/oracle.sol\":850:872  threshold = _threshold */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/checkpointoracle/contract/oracle.sol\":503:879  constructor(address[] memory _adminlist, uint _sectionSize, uint _processConfirms, uint _threshold) public {... */\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/checkpointoracle/contract/oracle.sol\":211:5742  contract CheckpointOracle {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":211:5742  contract CheckpointOracle {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":211:5742  contract CheckpointOracle {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x45848dfc\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x4d6a304c\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xd459fc46\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":4430:4697  function GetAllAdmin()... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_8:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_10\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_8)\n    tag_10:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":4430:4697  function GetAllAdmin()... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":1070:1208  function GetLatestCheckpoint()... */\n    tag_4:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      dup5\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":1605:4344  function SetCheckpoint(... */\n    tag_5:\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0xe0\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_14\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_14:\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":1605:4344  function SetCheckpoint(... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n        /* \"--CODEGEN--\":21:32   */\n      0x0100000000\n        /* \"--CODEGEN--\":8:19   */\n      dup2\n        /* \"--CODEGEN--\":5:33   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_15\n      jumpi\n        /* \"--CODEGEN--\":46:47   */\n      0x00\n        /* \"--CODEGEN--\":43:44   */\n      dup1\n        /* \"--CODEGEN--\":36:48   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_15:\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":1605:4344  function SetCheckpoint(... */\n      dup3\n      add\n        /* \"--CODEGEN--\":35:44   */\n      dup4\n        /* \"--CODEGEN--\":28:32   */\n      0x20\n        /* \"--CODEGEN--\":12:26   */\n      dup3\n        /* \"--CODEGEN--\":8:33   */\n      add\n        /* \"--CODEGEN--\":5:45   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_16\n      jumpi\n        /* \"--CODEGEN--\":58:59   */\n      0x00\n        /* \"--CODEGEN--\":55:56   */\n      dup1\n        /* \"--CODEGEN--\":48:60   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_16:\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":1605:4344  function SetCheckpoint(... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":101:110   */\n      dup5\n        /* \"--CODEGEN--\":95:97   */\n      0x20\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:98   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:99   */\n      add\n        /* \"--CODEGEN--\":60:111   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:119   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_17\n      jumpi\n        /* \"--CODEGEN--\":132:133   */\n      0x00\n        /* \"--CODEGEN--\":129:130   */\n      dup1\n        /* \"--CODEGEN--\":122:134   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_17:\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":1605:4344  function SetCheckpoint(... */\n      swap2\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":1605:4344  function SetCheckpoint(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n        /* \"--CODEGEN--\":21:32   */\n      0x0100000000\n        /* \"--CODEGEN--\":8:19   */\n      dup2\n        /* \"--CODEGEN--\":5:33   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_18\n      jumpi\n        /* \"--CODEGEN--\":46:47   */\n      0x00\n        /* \"--CODEGEN--\":43:44   */\n      dup1\n        /* \"--CODEGEN--\":36:48   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_18:\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":1605:4344  function SetCheckpoint(... */\n      dup3\n      add\n        /* \"--CODEGEN--\":35:44   */\n      dup4\n        /* \"--CODEGEN--\":28:32   */\n      0x20\n        /* \"--CODEGEN--\":12:26   */\n      dup3\n        /* \"--CODEGEN--\":8:33   */\n      add\n        /* \"--CODEGEN--\":5:45   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_19\n      jumpi\n        /* \"--CODEGEN--\":58:59   */\n      0x00\n        /* \"--CODEGEN--\":55:56   */\n      dup1\n        /* \"--CODEGEN--\":48:60   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_19:\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":1605:4344  function SetCheckpoint(... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":101:110   */\n      dup5\n        /* \"--CODEGEN--\":95:97   */\n      0x20\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:98   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:99   */\n      add\n        /* \"--CODEGEN--\":60:111   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:119   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_20\n      jumpi\n        /* \"--CODEGEN--\":132:133   */\n      0x00\n        /* \"--CODEGEN--\":129:130   */\n      dup1\n        /* \"--CODEGEN--\":122:134   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_20:\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":1605:4344  function SetCheckpoint(... */\n      swap2\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":1605:4344  function SetCheckpoint(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n        /* \"--CODEGEN--\":21:32   */\n      0x0100000000\n        /* \"--CODEGEN--\":8:19   */\n      dup2\n        /* \"--CODEGEN--\":5:33   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_21\n      jumpi\n        /* \"--CODEGEN--\":46:47   */\n      0x00\n        /* \"--CODEGEN--\":43:44   */\n      dup1\n        /* \"--CODEGEN--\":36:48   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_21:\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":1605:4344  function SetCheckpoint(... */\n      dup3\n      add\n        /* \"--CODEGEN--\":35:44   */\n      dup4\n        /* \"--CODEGEN--\":28:32   */\n      0x20\n        /* \"--CODEGEN--\":12:26   */\n      dup3\n        /* \"--CODEGEN--\":8:33   */\n      add\n        /* \"--CODEGEN--\":5:45   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_22\n      jumpi\n        /* \"--CODEGEN--\":58:59   */\n      0x00\n        /* \"--CODEGEN--\":55:56   */\n      dup1\n        /* \"--CODEGEN--\":48:60   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_22:\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":1605:4344  function SetCheckpoint(... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":101:110   */\n      dup5\n        /* \"--CODEGEN--\":95:97   */\n      0x20\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:98   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:99   */\n      add\n        /* \"--CODEGEN--\":60:111   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:119   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_23\n      jumpi\n        /* \"--CODEGEN--\":132:133   */\n      0x00\n        /* \"--CODEGEN--\":129:130   */\n      dup1\n        /* \"--CODEGEN--\":122:134   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_23:\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":1605:4344  function SetCheckpoint(... */\n      swap2\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":1605:4344  function SetCheckpoint(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      pop\n      pop\n      pop\n      tag_24\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":4430:4697  function GetAllAdmin()... */\n    tag_7:\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":4485:4501  address[] memory */\n      0x60\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":4517:4537  address[] memory ret */\n      dup1\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":4554:4563  adminList */\n      0x01\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":4554:4570  adminList.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":4540:4571  new address[](adminList.length) */\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_26\n      jumpi\n      dup2\n      0x20\n      add\n        /* \"--CODEGEN--\":29:31   */\n      0x20\n        /* \"--CODEGEN--\":21:27   */\n      dup3\n        /* \"--CODEGEN--\":17:32   */\n      mul\n        /* \"--CODEGEN--\":117:121   */\n      dup1\n        /* \"--CODEGEN--\":105:115   */\n      codesize\n        /* \"--CODEGEN--\":97:103   */\n      dup4\n        /* \"--CODEGEN--\":88:122   */\n      codecopy\n        /* \"--CODEGEN--\":148:152   */\n      dup1\n        /* \"--CODEGEN--\":140:146   */\n      dup3\n        /* \"--CODEGEN--\":136:153   */\n      add\n        /* \"--CODEGEN--\":126:153   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:157   */\n      pop\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":4540:4571  new address[](adminList.length) */\n      swap1\n      pop\n    tag_26:\n      pop\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":4517:4571  address[] memory ret = new address[](adminList.length) */\n      swap1\n      pop\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":4586:4592  uint i */\n      0x00\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":4595:4596  0 */\n      dup1\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":4586:4596  uint i = 0 */\n      swap1\n      pop\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":4581:4671  for (uint i = 0; i < adminList.length; i++) {... */\n    tag_27:\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":4602:4611  adminList */\n      0x01\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":4602:4618  adminList.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":4598:4599  i */\n      dup2\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":4598:4618  i < adminList.length */\n      lt\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":4581:4671  for (uint i = 0; i < adminList.length; i++) {... */\n      iszero\n      tag_28\n      jumpi\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":4648:4657  adminList */\n      0x01\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":4658:4659  i */\n      dup2\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":4648:4660  adminList[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_30\n      jumpi\n      invalid\n    tag_30:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":4639:4642  ret */\n      dup3\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":4643:4644  i */\n      dup3\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":4639:4645  ret[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_32\n      jumpi\n      invalid\n    tag_32:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":4639:4660  ret[i] = adminList[i] */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":4620:4623  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":4581:4671  for (uint i = 0; i < adminList.length; i++) {... */\n      jump(tag_27)\n    tag_28:\n      pop\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":4687:4690  ret */\n      dup1\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":4680:4690  return ret */\n      swap2\n      pop\n      pop\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":4430:4697  function GetAllAdmin()... */\n      swap1\n      jump\t// out\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":1070:1208  function GetLatestCheckpoint()... */\n    tag_12:\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":1133:1139  uint64 */\n      0x00\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":1141:1148  bytes32 */\n      dup1\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":1150:1154  uint */\n      0x00\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":1174:1186  sectionIndex */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":1188:1192  hash */\n      sload(0x04)\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":1194:1200  height */\n      sload(0x03)\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":1166:1201  return (sectionIndex, hash, height) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":1070:1208  function GetLatestCheckpoint()... */\n      swap1\n      swap2\n      swap3\n      jump\t// out\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":1605:4344  function SetCheckpoint(... */\n    tag_24:\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":1853:1857  bool */\n      0x00\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":1925:1931  admins */\n      dup1\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":1925:1943  admins[msg.sender] */\n      0x00\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":1932:1942  msg.sender */\n      caller\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":1925:1943  admins[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":1917:1944  require(admins[msg.sender]) */\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":2110:2121  _recentHash */\n      dup7\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":2092:2105  _recentNumber */\n      dup9\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":2082:2106  blockhash(_recentNumber) */\n      blockhash\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":2082:2121  blockhash(_recentNumber) == _recentHash */\n      eq\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":2074:2122  require(blockhash(_recentNumber) == _recentHash) */\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":2206:2207  r */\n      dup3\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":2206:2214  r.length */\n      mload\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":2194:2195  v */\n      dup5\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":2194:2202  v.length */\n      mload\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":2194:2214  v.length == r.length */\n      eq\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":2186:2215  require(v.length == r.length) */\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":2245:2246  s */\n      dup2\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":2245:2253  s.length */\n      mload\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":2233:2234  v */\n      dup5\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":2233:2241  v.length */\n      mload\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":2233:2253  v.length == s.length */\n      eq\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":2225:2254  require(v.length == s.length) */\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":2357:2372  processConfirms */\n      sload(0x06)\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":2345:2356  sectionSize */\n      sload(0x05)\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":2342:2343  1 */\n      0x01\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":2328:2341  _sectionIndex */\n      dup8\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":2328:2343  _sectionIndex+1 */\n      add\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":2327:2356  (_sectionIndex+1)*sectionSize */\n      0xffffffffffffffff\n      and\n      mul\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":2327:2372  (_sectionIndex+1)*sectionSize+processConfirms */\n      add\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":2312:2324  block.number */\n      number\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":2312:2372  block.number < (_sectionIndex+1)*sectionSize+processConfirms */\n      lt\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":2308:2411  if (block.number < (_sectionIndex+1)*sectionSize+processConfirms) {... */\n      iszero\n      tag_39\n      jumpi\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":2395:2400  false */\n      0x00\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":2388:2400  return false */\n      swap1\n      pop\n      jump(tag_34)\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":2308:2411  if (block.number < (_sectionIndex+1)*sectionSize+processConfirms) {... */\n    tag_39:\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":2481:2493  sectionIndex */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":2465:2493  _sectionIndex < sectionIndex */\n      0xffffffffffffffff\n      and\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":2465:2478  _sectionIndex */\n      dup6\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":2465:2493  _sectionIndex < sectionIndex */\n      0xffffffffffffffff\n      and\n      lt\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":2461:2532  if (_sectionIndex < sectionIndex) {... */\n      iszero\n      tag_40\n      jumpi\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":2516:2521  false */\n      0x00\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":2509:2521  return false */\n      swap1\n      pop\n      jump(tag_34)\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":2461:2532  if (_sectionIndex < sectionIndex) {... */\n    tag_40:\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":2605:2617  sectionIndex */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":2588:2617  _sectionIndex == sectionIndex */\n      0xffffffffffffffff\n      and\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":2588:2601  _sectionIndex */\n      dup6\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":2588:2617  _sectionIndex == sectionIndex */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":2588:2656  _sectionIndex == sectionIndex && (_sectionIndex != 0 || height != 0) */\n      dup1\n      iszero\n      tag_41\n      jumpi\n      pop\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":2639:2640  0 */\n      0x00\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":2622:2635  _sectionIndex */\n      dup6\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":2622:2640  _sectionIndex != 0 */\n      0xffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":2622:2655  _sectionIndex != 0 || height != 0 */\n      dup1\n      tag_42\n      jumpi\n      pop\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":2654:2655  0 */\n      0x00\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":2644:2650  height */\n      sload(0x03)\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":2644:2655  height != 0 */\n      eq\n      iszero\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":2622:2655  _sectionIndex != 0 || height != 0 */\n    tag_42:\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":2588:2656  _sectionIndex == sectionIndex && (_sectionIndex != 0 || height != 0) */\n    tag_41:\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":2584:2695  if (_sectionIndex == sectionIndex && (_sectionIndex != 0 || height != 0)) {... */\n      iszero\n      tag_43\n      jumpi\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":2679:2684  false */\n      0x00\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":2672:2684  return false */\n      swap1\n      pop\n      jump(tag_34)\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":2584:2695  if (_sectionIndex == sectionIndex && (_sectionIndex != 0 || height != 0)) {... */\n    tag_43:\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":2753:2764  _hash == \"\" */\n      0x00\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":2753:2758  _hash */\n      dup7\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":2753:2764  _hash == \"\" */\n      eq\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":2749:2802  if (_hash == \"\"){... */\n      iszero\n      tag_44\n      jumpi\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":2786:2791  false */\n      0x00\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":2779:2791  return false */\n      swap1\n      pop\n      jump(tag_34)\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":2749:2802  if (_hash == \"\"){... */\n    tag_44:\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":3294:3312  bytes32 signedHash */\n      0x00\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":3347:3351  0x19 */\n      0x19\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":3342:3352  byte(0x19) */\n      0xf8\n      shl\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":3359:3360  0 */\n      0x00\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":3354:3361  byte(0) */\n      0xf8\n      shl\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":3363:3367  this */\n      address\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":3369:3382  _sectionIndex */\n      dup9\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":3384:3389  _hash */\n      dup11\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":3325:3390  abi.encodePacked(byte(0x19), byte(0), this, _sectionIndex, _hash) */\n      add(0x20, mload(0x40))\n      dup1\n      dup7\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      dup2\n      mstore\n      0x01\n      add\n      dup6\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      dup2\n      mstore\n      0x01\n      add\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x60\n      shl\n      dup2\n      mstore\n      0x14\n      add\n      dup4\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      0xc0\n      shl\n      dup2\n      mstore\n      0x08\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":3325:3390  abi.encodePacked(byte(0x19), byte(0), this, _sectionIndex, _hash) */\n      swap1\n      0x40\n      mstore\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":3315:3391  keccak256(abi.encodePacked(byte(0x19), byte(0), this, _sectionIndex, _hash)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":3294:3391  bytes32 signedHash = keccak256(abi.encodePacked(byte(0x19), byte(0), this, _sectionIndex, _hash)) */\n      swap1\n      pop\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":3402:3419  address lastVoter */\n      0x00\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":3430:3431  0 */\n      dup1\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":3402:3432  address lastVoter = address(0) */\n      swap1\n      pop\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":3651:3659  uint idx */\n      0x00\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":3662:3663  0 */\n      dup1\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":3651:3663  uint idx = 0 */\n      swap1\n      pop\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":3646:4252  for (uint idx = 0; idx < v.length; idx++){... */\n    tag_45:\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":3671:3672  v */\n      dup7\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":3671:3679  v.length */\n      mload\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":3665:3668  idx */\n      dup2\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":3665:3679  idx < v.length */\n      lt\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":3646:4252  for (uint idx = 0; idx < v.length; idx++){... */\n      iszero\n      tag_46\n      jumpi\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":3701:3715  address signer */\n      0x00\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":3718:3763  ecrecover(signedHash, v[idx], r[idx], s[idx]) */\n      0x01\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":3728:3738  signedHash */\n      dup5\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":3740:3741  v */\n      dup10\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":3742:3745  idx */\n      dup5\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":3740:3746  v[idx] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_48\n      jumpi\n      invalid\n    tag_48:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":3748:3749  r */\n      dup10\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":3750:3753  idx */\n      dup6\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":3748:3754  r[idx] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_49\n      jumpi\n      invalid\n    tag_49:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":3756:3757  s */\n      dup10\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":3758:3761  idx */\n      dup7\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":3756:3762  s[idx] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_50\n      jumpi\n      invalid\n    tag_50:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":3718:3763  ecrecover(signedHash, v[idx], r[idx], s[idx]) */\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mload(0x40)\n      dup1\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_52\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_52:\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":3718:3763  ecrecover(signedHash, v[idx], r[idx], s[idx]) */\n      pop\n      pop\n      pop\n      mload(sub(mload(0x40), 0x20))\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":3701:3763  address signer = ecrecover(signedHash, v[idx], r[idx], s[idx]) */\n      swap1\n      pop\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":3785:3791  admins */\n      0x00\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":3785:3799  admins[signer] */\n      dup1\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":3792:3798  signer */\n      dup3\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":3785:3799  admins[signer] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":3777:3800  require(admins[signer]) */\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":3848:3857  lastVoter */\n      dup3\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":3840:3858  uint256(lastVoter) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":3830:3836  signer */\n      dup2\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":3822:3837  uint256(signer) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":3822:3858  uint256(signer) > uint256(lastVoter) */\n      gt\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":3814:3859  require(uint256(signer) > uint256(lastVoter)) */\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":3885:3891  signer */\n      dup1\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":3873:3891  lastVoter = signer */\n      swap3\n      pop\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":3928:3941  _sectionIndex */\n      dup9\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":3910:3973  NewCheckpointVote(_sectionIndex, _hash, v[idx], r[idx], s[idx]) */\n      0xffffffffffffffff\n      and\n      0xce51ffa16246bcaf0899f6504f473cd0114f430f566cef71ab7e03d3dde42a41\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":3943:3948  _hash */\n      dup12\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":3950:3951  v */\n      dup11\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":3952:3955  idx */\n      dup6\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":3950:3956  v[idx] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_55\n      jumpi\n      invalid\n    tag_55:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":3958:3959  r */\n      dup11\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":3960:3963  idx */\n      dup7\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":3958:3964  r[idx] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_56\n      jumpi\n      invalid\n    tag_56:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":3966:3967  s */\n      dup11\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":3968:3971  idx */\n      dup8\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":3966:3972  s[idx] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_57\n      jumpi\n      invalid\n    tag_57:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":3910:3973  NewCheckpointVote(_sectionIndex, _hash, v[idx], r[idx], s[idx]) */\n      mload(0x40)\n      dup1\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":4073:4082  threshold */\n      sload(0x07)\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":4068:4069  1 */\n      0x01\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":4064:4067  idx */\n      dup4\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":4064:4069  idx+1 */\n      add\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":4064:4082  idx+1 >= threshold */\n      lt\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":4060:4242  if (idx+1 >= threshold){... */\n      tag_58\n      jumpi\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":4108:4113  _hash */\n      dup10\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":4101:4105  hash */\n      0x04\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":4101:4113  hash = _hash */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":4140:4152  block.number */\n      number\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":4131:4137  height */\n      0x03\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":4131:4152  height = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":4185:4198  _sectionIndex */\n      dup9\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":4170:4182  sectionIndex */\n      0x02\n      0x00\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":4170:4198  sectionIndex = _sectionIndex */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":4223:4227  true */\n      0x01\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":4216:4227  return true */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_34)\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":4060:4242  if (idx+1 >= threshold){... */\n    tag_58:\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":3646:4252  for (uint idx = 0; idx < v.length; idx++){... */\n      pop\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":3681:3686  idx++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":3646:4252  for (uint idx = 0; idx < v.length; idx++){... */\n      jump(tag_45)\n    tag_46:\n      pop\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":4329:4337  revert() */\n      0x00\n      dup1\n      revert\n        /* \"contracts/checkpointoracle/contract/oracle.sol\":1605:4344  function SetCheckpoint(... */\n    tag_34:\n      swap8\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b1ccc61b55b4dd356d6faa9e533047b09b0ccddc8ae1c8b03e5d87ce7b7ee79264736f6c63430006000033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50604051610b26380380610b268339818101604052608081101561003357600080fd5b810190808051604051939291908464010000000082111561005357600080fd5b8382019150602082018581111561006957600080fd5b825186602082028301116401000000008211171561008657600080fd5b8083526020830192505050908051906020019060200280838360005b838110156100bd5780820151818401526020810190506100a2565b5050505090500160405260200180519060200190929190805190602001909291908051906020019092919050505060008090505b84518110156101e757600160008087848151811061010b57fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600185828151811061017257fe5b60200260200101519080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080806001019150506100f1565b5082600581905550816006819055508060078190555050505050610916806102106000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806345848dfc146100465780634d6a304c146100a5578063d459fc46146100e5575b600080fd5b61004e61030f565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610091578082015181840152602081019050610076565b505050509050019250505060405180910390f35b6100ad6103ef565b604051808467ffffffffffffffff1667ffffffffffffffff168152602001838152602001828152602001935050505060405180910390f35b6102f5600480360360e08110156100fb57600080fd5b81019080803590602001909291908035906020019092919080359060200190929190803567ffffffffffffffff1690602001909291908035906020019064010000000081111561014a57600080fd5b82018360208201111561015c57600080fd5b8035906020019184602083028401116401000000008311171561017e57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156101de57600080fd5b8201836020820111156101f057600080fd5b8035906020019184602083028401116401000000008311171561021257600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561027257600080fd5b82018360208201111561028457600080fd5b803590602001918460208302840111640100000000831117156102a657600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050919291929050505061041c565b604051808215151515815260200191505060405180910390f35b6060806001805490506040519080825280602002602001820160405280156103465781602001602082028038833980820191505090505b50905060008090505b6001805490508110156103e7576001818154811061036957fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168282815181106103a057fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050808060010191505061034f565b508091505090565b6000806000600260009054906101000a900467ffffffffffffffff16600454600354925092509250909192565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661047357600080fd5b8688401461048057600080fd5b825184511461048e57600080fd5b815184511461049c57600080fd5b6006546005546001870167ffffffffffffffff1602014310156104c257600090506108d5565b600260009054906101000a900467ffffffffffffffff1667ffffffffffffffff168567ffffffffffffffff1610156104fd57600090506108d5565b600260009054906101000a900467ffffffffffffffff1667ffffffffffffffff168567ffffffffffffffff1614801561054f575060008567ffffffffffffffff1614158061054e5750600060035414155b5b1561055d57600090506108d5565b600086141561056f57600090506108d5565b6000601960f81b600060f81b30888a60405160200180867effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152600101857effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526001018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b81526014018367ffffffffffffffff1667ffffffffffffffff1660c01b815260080182815260200195505050505050604051602081830303815290604052805190602001209050600080905060008090505b86518110156108cf5760006001848984815181106106b557fe5b60200260200101518985815181106106c957fe5b60200260200101518986815181106106dd57fe5b602002602001015160405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa15801561073c573d6000803e3d6000fd5b5050506020604051035190506000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661079d57600080fd5b8273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16116107d557600080fd5b8092508867ffffffffffffffff167fce51ffa16246bcaf0899f6504f473cd0114f430f566cef71ab7e03d3dde42a418b8a858151811061081157fe5b60200260200101518a868151811061082557fe5b60200260200101518a878151811061083957fe5b6020026020010151604051808581526020018460ff1660ff16815260200183815260200182815260200194505050505060405180910390a260075460018301106108c157896004819055504360038190555088600260006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060019450505050506108d5565b50808060010191505061069b565b50600080fd5b97965050505050505056fea2646970667358221220b1ccc61b55b4dd356d6faa9e533047b09b0ccddc8ae1c8b03e5d87ce7b7ee79264736f6c63430006000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xB26 CODESIZE SUB DUP1 PUSH2 0xB26 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH2 0x86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xBD JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA2 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x1E7 JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x10B JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x172 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xF1 JUMP JUMPDEST POP DUP3 PUSH1 0x5 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP POP POP POP PUSH2 0x916 DUP1 PUSH2 0x210 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x45848DFC EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x4D6A304C EQ PUSH2 0xA5 JUMPI DUP1 PUSH4 0xD459FC46 EQ PUSH2 0xE5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x30F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x91 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x76 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAD PUSH2 0x3EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0xFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x14A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x15C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x17E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x1DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x1F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x284 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x2A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x41C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x1 DUP1 SLOAD SWAP1 POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x346 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST PUSH1 0x1 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x3E7 JUMPI PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x369 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3A0 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x34F JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD SWAP3 POP SWAP3 POP SWAP3 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x473 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 DUP9 BLOCKHASH EQ PUSH2 0x480 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP5 MLOAD EQ PUSH2 0x48E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP5 MLOAD EQ PUSH2 0x49C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH1 0x1 DUP8 ADD PUSH8 0xFFFFFFFFFFFFFFFF AND MUL ADD NUMBER LT ISZERO PUSH2 0x4C2 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x8D5 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x4FD JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x8D5 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x54F JUMPI POP PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 PUSH2 0x54E JUMPI POP PUSH1 0x0 PUSH1 0x3 SLOAD EQ ISZERO JUMPDEST JUMPDEST ISZERO PUSH2 0x55D JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x8D5 JUMP JUMPDEST PUSH1 0x0 DUP7 EQ ISZERO PUSH2 0x56F JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x8D5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x19 PUSH1 0xF8 SHL PUSH1 0x0 PUSH1 0xF8 SHL ADDRESS DUP9 DUP11 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP7 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x1 ADD DUP6 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x1 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE PUSH1 0x14 ADD DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0xC0 SHL DUP2 MSTORE PUSH1 0x8 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST DUP7 MLOAD DUP2 LT ISZERO PUSH2 0x8CF JUMPI PUSH1 0x0 PUSH1 0x1 DUP5 DUP10 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x6B5 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP10 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x6C9 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP10 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x6DD JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x73C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x79D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT PUSH2 0x7D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP3 POP DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0xCE51FFA16246BCAF0899F6504F473CD0114F430F566CEF71AB7E03D3DDE42A41 DUP12 DUP11 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x811 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP11 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x825 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP11 DUP8 DUP2 MLOAD DUP2 LT PUSH2 0x839 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x7 SLOAD PUSH1 0x1 DUP4 ADD LT PUSH2 0x8C1 JUMPI DUP10 PUSH1 0x4 DUP2 SWAP1 SSTORE POP NUMBER PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP9 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP5 POP POP POP POP POP PUSH2 0x8D5 JUMP JUMPDEST POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x69B JUMP JUMPDEST POP PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 0xCC 0xC6 SHL SSTORE 0xB4 0xDD CALLDATALOAD PUSH14 0x6FAA9E533047B09B0CCDDC8AE1C8 0xB0 RETURNDATACOPY 0x5D DUP8 0xCE PUSH28 0x7EE79264736F6C634300060000330000000000000000000000000000 ",
							"sourceMap": "211:5531:0:-:0;;;503:376;8:9:-1;5:2;;;30:1;27;20:12;5:2;503:376:0;;;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;503:376:0;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;385:12;380:3;373:25;421:4;416:3;412:14;405:21;;0:433;;503:376:0;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;503:376:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;625:6;634:1;625:10;;620:141;641:10;:17;637:1;:21;620:141;;;703:4;679:6;:21;686:10;697:1;686:13;;;;;;;;;;;;;;679:21;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;721:9;736:10;747:1;736:13;;;;;;;;;;;;;;721:29;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;721:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;660:3;;;;;;;620:141;;;;784:12;770:11;:26;;;;824:16;806:15;:34;;;;862:10;850:9;:22;;;;503:376;;;;211:5531;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c806345848dfc146100465780634d6a304c146100a5578063d459fc46146100e5575b600080fd5b61004e61030f565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610091578082015181840152602081019050610076565b505050509050019250505060405180910390f35b6100ad6103ef565b604051808467ffffffffffffffff1667ffffffffffffffff168152602001838152602001828152602001935050505060405180910390f35b6102f5600480360360e08110156100fb57600080fd5b81019080803590602001909291908035906020019092919080359060200190929190803567ffffffffffffffff1690602001909291908035906020019064010000000081111561014a57600080fd5b82018360208201111561015c57600080fd5b8035906020019184602083028401116401000000008311171561017e57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156101de57600080fd5b8201836020820111156101f057600080fd5b8035906020019184602083028401116401000000008311171561021257600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561027257600080fd5b82018360208201111561028457600080fd5b803590602001918460208302840111640100000000831117156102a657600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050919291929050505061041c565b604051808215151515815260200191505060405180910390f35b6060806001805490506040519080825280602002602001820160405280156103465781602001602082028038833980820191505090505b50905060008090505b6001805490508110156103e7576001818154811061036957fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168282815181106103a057fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050808060010191505061034f565b508091505090565b6000806000600260009054906101000a900467ffffffffffffffff16600454600354925092509250909192565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661047357600080fd5b8688401461048057600080fd5b825184511461048e57600080fd5b815184511461049c57600080fd5b6006546005546001870167ffffffffffffffff1602014310156104c257600090506108d5565b600260009054906101000a900467ffffffffffffffff1667ffffffffffffffff168567ffffffffffffffff1610156104fd57600090506108d5565b600260009054906101000a900467ffffffffffffffff1667ffffffffffffffff168567ffffffffffffffff1614801561054f575060008567ffffffffffffffff1614158061054e5750600060035414155b5b1561055d57600090506108d5565b600086141561056f57600090506108d5565b6000601960f81b600060f81b30888a60405160200180867effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152600101857effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526001018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b81526014018367ffffffffffffffff1667ffffffffffffffff1660c01b815260080182815260200195505050505050604051602081830303815290604052805190602001209050600080905060008090505b86518110156108cf5760006001848984815181106106b557fe5b60200260200101518985815181106106c957fe5b60200260200101518986815181106106dd57fe5b602002602001015160405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa15801561073c573d6000803e3d6000fd5b5050506020604051035190506000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661079d57600080fd5b8273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16116107d557600080fd5b8092508867ffffffffffffffff167fce51ffa16246bcaf0899f6504f473cd0114f430f566cef71ab7e03d3dde42a418b8a858151811061081157fe5b60200260200101518a868151811061082557fe5b60200260200101518a878151811061083957fe5b6020026020010151604051808581526020018460ff1660ff16815260200183815260200182815260200194505050505060405180910390a260075460018301106108c157896004819055504360038190555088600260006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060019450505050506108d5565b50808060010191505061069b565b50600080fd5b97965050505050505056fea2646970667358221220b1ccc61b55b4dd356d6faa9e533047b09b0ccddc8ae1c8b03e5d87ce7b7ee79264736f6c63430006000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x45848DFC EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x4D6A304C EQ PUSH2 0xA5 JUMPI DUP1 PUSH4 0xD459FC46 EQ PUSH2 0xE5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x30F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x91 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x76 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAD PUSH2 0x3EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0xFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x14A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x15C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x17E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x1DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x1F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x284 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x2A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x41C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x1 DUP1 SLOAD SWAP1 POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x346 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST PUSH1 0x1 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x3E7 JUMPI PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x369 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3A0 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x34F JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD SWAP3 POP SWAP3 POP SWAP3 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x473 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 DUP9 BLOCKHASH EQ PUSH2 0x480 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP5 MLOAD EQ PUSH2 0x48E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP5 MLOAD EQ PUSH2 0x49C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH1 0x1 DUP8 ADD PUSH8 0xFFFFFFFFFFFFFFFF AND MUL ADD NUMBER LT ISZERO PUSH2 0x4C2 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x8D5 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x4FD JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x8D5 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x54F JUMPI POP PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 PUSH2 0x54E JUMPI POP PUSH1 0x0 PUSH1 0x3 SLOAD EQ ISZERO JUMPDEST JUMPDEST ISZERO PUSH2 0x55D JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x8D5 JUMP JUMPDEST PUSH1 0x0 DUP7 EQ ISZERO PUSH2 0x56F JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x8D5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x19 PUSH1 0xF8 SHL PUSH1 0x0 PUSH1 0xF8 SHL ADDRESS DUP9 DUP11 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP7 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x1 ADD DUP6 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x1 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE PUSH1 0x14 ADD DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0xC0 SHL DUP2 MSTORE PUSH1 0x8 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST DUP7 MLOAD DUP2 LT ISZERO PUSH2 0x8CF JUMPI PUSH1 0x0 PUSH1 0x1 DUP5 DUP10 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x6B5 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP10 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x6C9 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP10 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x6DD JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x73C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x79D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT PUSH2 0x7D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP3 POP DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0xCE51FFA16246BCAF0899F6504F473CD0114F430F566CEF71AB7E03D3DDE42A41 DUP12 DUP11 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x811 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP11 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x825 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP11 DUP8 DUP2 MLOAD DUP2 LT PUSH2 0x839 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x7 SLOAD PUSH1 0x1 DUP4 ADD LT PUSH2 0x8C1 JUMPI DUP10 PUSH1 0x4 DUP2 SWAP1 SSTORE POP NUMBER PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP9 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP5 POP POP POP POP POP PUSH2 0x8D5 JUMP JUMPDEST POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x69B JUMP JUMPDEST POP PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 0xCC 0xC6 SHL SSTORE 0xB4 0xDD CALLDATALOAD PUSH14 0x6FAA9E533047B09B0CCDDC8AE1C8 0xB0 RETURNDATACOPY 0x5D DUP8 0xCE PUSH28 0x7EE79264736F6C634300060000330000000000000000000000000000 ",
							"sourceMap": "211:5531:0:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;211:5531:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4430:267;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4430:267:0;;;;;;;;;;;;;;;;;1070:138;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1605:2739;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1605:2739:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1605:2739:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1605:2739:0;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;1605:2739:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1605:2739:0;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1605:2739:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1605:2739:0;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;1605:2739:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1605:2739:0;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1605:2739:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1605:2739:0;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;1605:2739:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1605:2739:0;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4430:267;4485:16;4517:20;4554:9;:16;;;;4540:31;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;4540:31:0;;;;4517:54;;4586:6;4595:1;4586:10;;4581:90;4602:9;:16;;;;4598:1;:20;4581:90;;;4648:9;4658:1;4648:12;;;;;;;;;;;;;;;;;;;;;;;;;4639:3;4643:1;4639:6;;;;;;;;;;;;;:21;;;;;;;;;;;4620:3;;;;;;;4581:90;;;;4687:3;4680:10;;;4430:267;:::o;1070:138::-;1133:6;1141:7;1150:4;1174:12;;;;;;;;;;;1188:4;;1194:6;;1166:35;;;;;;1070:138;;;:::o;1605:2739::-;1853:4;1925:6;:18;1932:10;1925:18;;;;;;;;;;;;;;;;;;;;;;;;;1917:27;;;;;;2110:11;2092:13;2082:24;:39;2074:48;;;;;;2206:1;:8;2194:1;:8;:20;2186:29;;;;;;2245:1;:8;2233:1;:8;:20;2225:29;;;;;;2357:15;;2345:11;;2342:1;2328:13;:15;2327:29;;;:45;2312:12;:60;2308:103;;;2395:5;2388:12;;;;2308:103;2481:12;;;;;;;;;;;2465:28;;:13;:28;;;2461:71;;;2516:5;2509:12;;;;2461:71;2605:12;;;;;;;;;;;2588:29;;:13;:29;;;:68;;;;;2639:1;2622:13;:18;;;;:33;;;;2654:1;2644:6;;:11;;2622:33;2588:68;2584:111;;;2679:5;2672:12;;;;2584:111;2753:11;:5;:11;2749:53;;;2786:5;2779:12;;;;2749:53;3294:18;3347:4;3342:10;;3359:1;3354:7;;3363:4;3369:13;3384:5;3325:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3325:65:0;;;3315:76;;;;;;3294:97;;3402:17;3430:1;3402:30;;3651:8;3662:1;3651:12;;3646:606;3671:1;:8;3665:3;:14;3646:606;;;3701:14;3718:45;3728:10;3740:1;3742:3;3740:6;;;;;;;;;;;;;;3748:1;3750:3;3748:6;;;;;;;;;;;;;;3756:1;3758:3;3756:6;;;;;;;;;;;;;;3718:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3718:45:0;;;;;;;;3701:62;;3785:6;:14;3792:6;3785:14;;;;;;;;;;;;;;;;;;;;;;;;;3777:23;;;;;;3848:9;3840:18;;3830:6;3822:15;;:36;3814:45;;;;;;3885:6;3873:18;;3928:13;3910:63;;;3943:5;3950:1;3952:3;3950:6;;;;;;;;;;;;;;3958:1;3960:3;3958:6;;;;;;;;;;;;;;3966:1;3968:3;3966:6;;;;;;;;;;;;;;3910:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4073:9;;4068:1;4064:3;:5;:18;4060:182;;4108:5;4101:4;:12;;;;4140;4131:6;:21;;;;4185:13;4170:12;;:28;;;;;;;;;;;;;;;;;;4223:4;4216:11;;;;;;;;4060:182;3646:606;3681:5;;;;;;;3646:606;;;;4329:8;;;1605:2739;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "465200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"GetAllAdmin()": "infinite",
								"GetLatestCheckpoint()": "2729",
								"SetCheckpoint(uint256,bytes32,bytes32,uint64,uint8[],bytes32[],bytes32[])": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 211,
									"end": 5742,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 211,
									"end": 5742,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 211,
									"end": 5742,
									"name": "MSTORE"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "POP"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "MLOAD"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "PUSHSIZE"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "CODESIZE"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "SUB"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "DUP1"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "PUSHSIZE"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "DUP4"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "CODECOPY"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "DUP2"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "DUP2"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "ADD"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "MSTORE"
								},
								{
									"begin": 13,
									"end": 16,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 8,
									"end": 11,
									"name": "DUP2"
								},
								{
									"begin": 5,
									"end": 17,
									"name": "LT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "DUP2"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "ADD"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "SWAP1"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "DUP1"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "DUP1"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "MLOAD"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "MLOAD"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "SWAP4"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "SWAP3"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "SWAP2"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "SWAP1"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "DUP5"
								},
								{
									"begin": 19,
									"end": 30,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 14,
									"end": 17,
									"name": "DUP3"
								},
								{
									"begin": 11,
									"end": 31,
									"name": "GT"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "ISZERO"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "PUSH [tag]",
									"value": "3"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "JUMPI"
								},
								{
									"begin": 44,
									"end": 45,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 41,
									"end": 42,
									"name": "DUP1"
								},
								{
									"begin": 34,
									"end": 46,
									"name": "REVERT"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "tag",
									"value": "3"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "JUMPDEST"
								},
								{
									"begin": 71,
									"end": 82,
									"name": "DUP4"
								},
								{
									"begin": 66,
									"end": 69,
									"name": "DUP3"
								},
								{
									"begin": 62,
									"end": 83,
									"name": "ADD"
								},
								{
									"begin": 55,
									"end": 83,
									"name": "SWAP2"
								},
								{
									"begin": 55,
									"end": 83,
									"name": "POP"
								},
								{
									"begin": 123,
									"end": 127,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 118,
									"end": 121,
									"name": "DUP3"
								},
								{
									"begin": 114,
									"end": 128,
									"name": "ADD"
								},
								{
									"begin": 159,
									"end": 168,
									"name": "DUP6"
								},
								{
									"begin": 141,
									"end": 157,
									"name": "DUP2"
								},
								{
									"begin": 138,
									"end": 169,
									"name": "GT"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "ISZERO"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "PUSH [tag]",
									"value": "4"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "JUMPI"
								},
								{
									"begin": 182,
									"end": 183,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 179,
									"end": 180,
									"name": "DUP1"
								},
								{
									"begin": 172,
									"end": 184,
									"name": "REVERT"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "tag",
									"value": "4"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "JUMPDEST"
								},
								{
									"begin": 219,
									"end": 222,
									"name": "DUP3"
								},
								{
									"begin": 213,
									"end": 223,
									"name": "MLOAD"
								},
								{
									"begin": 331,
									"end": 340,
									"name": "DUP7"
								},
								{
									"begin": 325,
									"end": 327,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 311,
									"end": 323,
									"name": "DUP3"
								},
								{
									"begin": 307,
									"end": 328,
									"name": "MUL"
								},
								{
									"begin": 289,
									"end": 305,
									"name": "DUP4"
								},
								{
									"begin": 285,
									"end": 329,
									"name": "ADD"
								},
								{
									"begin": 282,
									"end": 341,
									"name": "GT"
								},
								{
									"begin": 261,
									"end": 272,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 247,
									"end": 259,
									"name": "DUP3"
								},
								{
									"begin": 244,
									"end": 273,
									"name": "GT"
								},
								{
									"begin": 233,
									"end": 349,
									"name": "OR"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "ISZERO"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "PUSH [tag]",
									"value": "5"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "JUMPI"
								},
								{
									"begin": 362,
									"end": 363,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 359,
									"end": 360,
									"name": "DUP1"
								},
								{
									"begin": 352,
									"end": 364,
									"name": "REVERT"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "tag",
									"value": "5"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "JUMPDEST"
								},
								{
									"begin": 385,
									"end": 397,
									"name": "DUP1"
								},
								{
									"begin": 380,
									"end": 383,
									"name": "DUP4"
								},
								{
									"begin": 373,
									"end": 398,
									"name": "MSTORE"
								},
								{
									"begin": 421,
									"end": 425,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 416,
									"end": 419,
									"name": "DUP4"
								},
								{
									"begin": 412,
									"end": 426,
									"name": "ADD"
								},
								{
									"begin": 405,
									"end": 426,
									"name": "SWAP3"
								},
								{
									"begin": 405,
									"end": 426,
									"name": "POP"
								},
								{
									"begin": 0,
									"end": 433,
									"name": "POP"
								},
								{
									"begin": 0,
									"end": 433,
									"name": "POP"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "SWAP1"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "DUP1"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "MLOAD"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "SWAP1"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "ADD"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "SWAP1"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "MUL"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "DUP1"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "DUP4"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "DUP4"
								},
								{
									"begin": 23,
									"end": 24,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST"
								},
								{
									"begin": 33,
									"end": 36,
									"name": "DUP4"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "DUP2"
								},
								{
									"begin": 27,
									"end": 37,
									"name": "LT"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "ISZERO"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPI"
								},
								{
									"begin": 99,
									"end": 100,
									"name": "DUP1"
								},
								{
									"begin": 94,
									"end": 97,
									"name": "DUP3"
								},
								{
									"begin": 90,
									"end": 101,
									"name": "ADD"
								},
								{
									"begin": 84,
									"end": 102,
									"name": "MLOAD"
								},
								{
									"begin": 80,
									"end": 81,
									"name": "DUP2"
								},
								{
									"begin": 75,
									"end": 78,
									"name": "DUP5"
								},
								{
									"begin": 71,
									"end": 82,
									"name": "ADD"
								},
								{
									"begin": 64,
									"end": 103,
									"name": "MSTORE"
								},
								{
									"begin": 52,
									"end": 54,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 49,
									"end": 50,
									"name": "DUP2"
								},
								{
									"begin": 45,
									"end": 55,
									"name": "ADD"
								},
								{
									"begin": 40,
									"end": 55,
									"name": "SWAP1"
								},
								{
									"begin": 40,
									"end": 55,
									"name": "POP"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMP"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST"
								},
								{
									"begin": 12,
									"end": 26,
									"name": "POP"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "POP"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "POP"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "POP"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "SWAP1"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "POP"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "ADD"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "MSTORE"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "ADD"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "DUP1"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "MLOAD"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "SWAP1"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "ADD"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "SWAP1"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "SWAP3"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "SWAP2"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "SWAP1"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "DUP1"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "MLOAD"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "SWAP1"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "ADD"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "SWAP1"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "SWAP3"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "SWAP2"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "SWAP1"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "DUP1"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "MLOAD"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "SWAP1"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "ADD"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "SWAP1"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "SWAP3"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "SWAP2"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "SWAP1"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "POP"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "POP"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "POP"
								},
								{
									"begin": 625,
									"end": 631,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 634,
									"end": 635,
									"name": "DUP1"
								},
								{
									"begin": 625,
									"end": 635,
									"name": "SWAP1"
								},
								{
									"begin": 625,
									"end": 635,
									"name": "POP"
								},
								{
									"begin": 620,
									"end": 761,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 620,
									"end": 761,
									"name": "JUMPDEST"
								},
								{
									"begin": 641,
									"end": 651,
									"name": "DUP5"
								},
								{
									"begin": 641,
									"end": 658,
									"name": "MLOAD"
								},
								{
									"begin": 637,
									"end": 638,
									"name": "DUP2"
								},
								{
									"begin": 637,
									"end": 658,
									"name": "LT"
								},
								{
									"begin": 620,
									"end": 761,
									"name": "ISZERO"
								},
								{
									"begin": 620,
									"end": 761,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 620,
									"end": 761,
									"name": "JUMPI"
								},
								{
									"begin": 703,
									"end": 707,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 679,
									"end": 685,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 679,
									"end": 700,
									"name": "DUP1"
								},
								{
									"begin": 686,
									"end": 696,
									"name": "DUP8"
								},
								{
									"begin": 697,
									"end": 698,
									"name": "DUP5"
								},
								{
									"begin": 686,
									"end": 699,
									"name": "DUP2"
								},
								{
									"begin": 686,
									"end": 699,
									"name": "MLOAD"
								},
								{
									"begin": 686,
									"end": 699,
									"name": "DUP2"
								},
								{
									"begin": 686,
									"end": 699,
									"name": "LT"
								},
								{
									"begin": 686,
									"end": 699,
									"name": "PUSH [tag]",
									"value": "14"
								},
								{
									"begin": 686,
									"end": 699,
									"name": "JUMPI"
								},
								{
									"begin": 686,
									"end": 699,
									"name": "INVALID"
								},
								{
									"begin": 686,
									"end": 699,
									"name": "tag",
									"value": "14"
								},
								{
									"begin": 686,
									"end": 699,
									"name": "JUMPDEST"
								},
								{
									"begin": 686,
									"end": 699,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 686,
									"end": 699,
									"name": "MUL"
								},
								{
									"begin": 686,
									"end": 699,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 686,
									"end": 699,
									"name": "ADD"
								},
								{
									"begin": 686,
									"end": 699,
									"name": "ADD"
								},
								{
									"begin": 686,
									"end": 699,
									"name": "MLOAD"
								},
								{
									"begin": 679,
									"end": 700,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 679,
									"end": 700,
									"name": "AND"
								},
								{
									"begin": 679,
									"end": 700,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 679,
									"end": 700,
									"name": "AND"
								},
								{
									"begin": 679,
									"end": 700,
									"name": "DUP2"
								},
								{
									"begin": 679,
									"end": 700,
									"name": "MSTORE"
								},
								{
									"begin": 679,
									"end": 700,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 679,
									"end": 700,
									"name": "ADD"
								},
								{
									"begin": 679,
									"end": 700,
									"name": "SWAP1"
								},
								{
									"begin": 679,
									"end": 700,
									"name": "DUP2"
								},
								{
									"begin": 679,
									"end": 700,
									"name": "MSTORE"
								},
								{
									"begin": 679,
									"end": 700,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 679,
									"end": 700,
									"name": "ADD"
								},
								{
									"begin": 679,
									"end": 700,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 679,
									"end": 700,
									"name": "KECCAK256"
								},
								{
									"begin": 679,
									"end": 700,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 679,
									"end": 707,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 679,
									"end": 707,
									"name": "EXP"
								},
								{
									"begin": 679,
									"end": 707,
									"name": "DUP2"
								},
								{
									"begin": 679,
									"end": 707,
									"name": "SLOAD"
								},
								{
									"begin": 679,
									"end": 707,
									"name": "DUP2"
								},
								{
									"begin": 679,
									"end": 707,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 679,
									"end": 707,
									"name": "MUL"
								},
								{
									"begin": 679,
									"end": 707,
									"name": "NOT"
								},
								{
									"begin": 679,
									"end": 707,
									"name": "AND"
								},
								{
									"begin": 679,
									"end": 707,
									"name": "SWAP1"
								},
								{
									"begin": 679,
									"end": 707,
									"name": "DUP4"
								},
								{
									"begin": 679,
									"end": 707,
									"name": "ISZERO"
								},
								{
									"begin": 679,
									"end": 707,
									"name": "ISZERO"
								},
								{
									"begin": 679,
									"end": 707,
									"name": "MUL"
								},
								{
									"begin": 679,
									"end": 707,
									"name": "OR"
								},
								{
									"begin": 679,
									"end": 707,
									"name": "SWAP1"
								},
								{
									"begin": 679,
									"end": 707,
									"name": "SSTORE"
								},
								{
									"begin": 679,
									"end": 707,
									"name": "POP"
								},
								{
									"begin": 721,
									"end": 730,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 736,
									"end": 746,
									"name": "DUP6"
								},
								{
									"begin": 747,
									"end": 748,
									"name": "DUP3"
								},
								{
									"begin": 736,
									"end": 749,
									"name": "DUP2"
								},
								{
									"begin": 736,
									"end": 749,
									"name": "MLOAD"
								},
								{
									"begin": 736,
									"end": 749,
									"name": "DUP2"
								},
								{
									"begin": 736,
									"end": 749,
									"name": "LT"
								},
								{
									"begin": 736,
									"end": 749,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 736,
									"end": 749,
									"name": "JUMPI"
								},
								{
									"begin": 736,
									"end": 749,
									"name": "INVALID"
								},
								{
									"begin": 736,
									"end": 749,
									"name": "tag",
									"value": "15"
								},
								{
									"begin": 736,
									"end": 749,
									"name": "JUMPDEST"
								},
								{
									"begin": 736,
									"end": 749,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 736,
									"end": 749,
									"name": "MUL"
								},
								{
									"begin": 736,
									"end": 749,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 736,
									"end": 749,
									"name": "ADD"
								},
								{
									"begin": 736,
									"end": 749,
									"name": "ADD"
								},
								{
									"begin": 736,
									"end": 749,
									"name": "MLOAD"
								},
								{
									"begin": 721,
									"end": 750,
									"name": "SWAP1"
								},
								{
									"begin": 721,
									"end": 750,
									"name": "DUP1"
								},
								{
									"begin": 39,
									"end": 40,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 33,
									"end": 36,
									"name": "DUP2"
								},
								{
									"begin": 27,
									"end": 37,
									"name": "SLOAD"
								},
								{
									"begin": 23,
									"end": 41,
									"name": "ADD"
								},
								{
									"begin": 57,
									"end": 67,
									"name": "DUP1"
								},
								{
									"begin": 52,
									"end": 55,
									"name": "DUP3"
								},
								{
									"begin": 45,
									"end": 68,
									"name": "SSTORE"
								},
								{
									"begin": 79,
									"end": 89,
									"name": "DUP1"
								},
								{
									"begin": 72,
									"end": 89,
									"name": "SWAP2"
								},
								{
									"begin": 72,
									"end": 89,
									"name": "POP"
								},
								{
									"begin": 0,
									"end": 93,
									"name": "POP"
								},
								{
									"begin": 721,
									"end": 750,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 721,
									"end": 750,
									"name": "SWAP1"
								},
								{
									"begin": 721,
									"end": 750,
									"name": "SUB"
								},
								{
									"begin": 721,
									"end": 750,
									"name": "SWAP1"
								},
								{
									"begin": 721,
									"end": 750,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 721,
									"end": 750,
									"name": "MSTORE"
								},
								{
									"begin": 721,
									"end": 750,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 721,
									"end": 750,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 721,
									"end": 750,
									"name": "KECCAK256"
								},
								{
									"begin": 721,
									"end": 750,
									"name": "ADD"
								},
								{
									"begin": 721,
									"end": 750,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 721,
									"end": 750,
									"name": "SWAP1"
								},
								{
									"begin": 721,
									"end": 750,
									"name": "SWAP2"
								},
								{
									"begin": 721,
									"end": 750,
									"name": "SWAP1"
								},
								{
									"begin": 721,
									"end": 750,
									"name": "SWAP2"
								},
								{
									"begin": 721,
									"end": 750,
									"name": "SWAP1"
								},
								{
									"begin": 721,
									"end": 750,
									"name": "SWAP2"
								},
								{
									"begin": 721,
									"end": 750,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 721,
									"end": 750,
									"name": "EXP"
								},
								{
									"begin": 721,
									"end": 750,
									"name": "DUP2"
								},
								{
									"begin": 721,
									"end": 750,
									"name": "SLOAD"
								},
								{
									"begin": 721,
									"end": 750,
									"name": "DUP2"
								},
								{
									"begin": 721,
									"end": 750,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 721,
									"end": 750,
									"name": "MUL"
								},
								{
									"begin": 721,
									"end": 750,
									"name": "NOT"
								},
								{
									"begin": 721,
									"end": 750,
									"name": "AND"
								},
								{
									"begin": 721,
									"end": 750,
									"name": "SWAP1"
								},
								{
									"begin": 721,
									"end": 750,
									"name": "DUP4"
								},
								{
									"begin": 721,
									"end": 750,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 721,
									"end": 750,
									"name": "AND"
								},
								{
									"begin": 721,
									"end": 750,
									"name": "MUL"
								},
								{
									"begin": 721,
									"end": 750,
									"name": "OR"
								},
								{
									"begin": 721,
									"end": 750,
									"name": "SWAP1"
								},
								{
									"begin": 721,
									"end": 750,
									"name": "SSTORE"
								},
								{
									"begin": 721,
									"end": 750,
									"name": "POP"
								},
								{
									"begin": 660,
									"end": 663,
									"name": "DUP1"
								},
								{
									"begin": 660,
									"end": 663,
									"name": "DUP1"
								},
								{
									"begin": 660,
									"end": 663,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 660,
									"end": 663,
									"name": "ADD"
								},
								{
									"begin": 660,
									"end": 663,
									"name": "SWAP2"
								},
								{
									"begin": 660,
									"end": 663,
									"name": "POP"
								},
								{
									"begin": 660,
									"end": 663,
									"name": "POP"
								},
								{
									"begin": 620,
									"end": 761,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 620,
									"end": 761,
									"name": "JUMP"
								},
								{
									"begin": 620,
									"end": 761,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 620,
									"end": 761,
									"name": "JUMPDEST"
								},
								{
									"begin": 620,
									"end": 761,
									"name": "POP"
								},
								{
									"begin": 784,
									"end": 796,
									"name": "DUP3"
								},
								{
									"begin": 770,
									"end": 781,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 770,
									"end": 796,
									"name": "DUP2"
								},
								{
									"begin": 770,
									"end": 796,
									"name": "SWAP1"
								},
								{
									"begin": 770,
									"end": 796,
									"name": "SSTORE"
								},
								{
									"begin": 770,
									"end": 796,
									"name": "POP"
								},
								{
									"begin": 824,
									"end": 840,
									"name": "DUP2"
								},
								{
									"begin": 806,
									"end": 821,
									"name": "PUSH",
									"value": "6"
								},
								{
									"begin": 806,
									"end": 840,
									"name": "DUP2"
								},
								{
									"begin": 806,
									"end": 840,
									"name": "SWAP1"
								},
								{
									"begin": 806,
									"end": 840,
									"name": "SSTORE"
								},
								{
									"begin": 806,
									"end": 840,
									"name": "POP"
								},
								{
									"begin": 862,
									"end": 872,
									"name": "DUP1"
								},
								{
									"begin": 850,
									"end": 859,
									"name": "PUSH",
									"value": "7"
								},
								{
									"begin": 850,
									"end": 872,
									"name": "DUP2"
								},
								{
									"begin": 850,
									"end": 872,
									"name": "SWAP1"
								},
								{
									"begin": 850,
									"end": 872,
									"name": "SSTORE"
								},
								{
									"begin": 850,
									"end": 872,
									"name": "POP"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "POP"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "POP"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "POP"
								},
								{
									"begin": 503,
									"end": 879,
									"name": "POP"
								},
								{
									"begin": 211,
									"end": 5742,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 211,
									"end": 5742,
									"name": "DUP1"
								},
								{
									"begin": 211,
									"end": 5742,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 211,
									"end": 5742,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 211,
									"end": 5742,
									"name": "CODECOPY"
								},
								{
									"begin": 211,
									"end": 5742,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 211,
									"end": 5742,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b1ccc61b55b4dd356d6faa9e533047b09b0ccddc8ae1c8b03e5d87ce7b7ee79264736f6c63430006000033",
									".code": [
										{
											"begin": 211,
											"end": 5742,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 211,
											"end": 5742,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 211,
											"end": 5742,
											"name": "MSTORE"
										},
										{
											"begin": 211,
											"end": 5742,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 211,
											"end": 5742,
											"name": "POP"
										},
										{
											"begin": 211,
											"end": 5742,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 211,
											"end": 5742,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 211,
											"end": 5742,
											"name": "LT"
										},
										{
											"begin": 211,
											"end": 5742,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 211,
											"end": 5742,
											"name": "JUMPI"
										},
										{
											"begin": 211,
											"end": 5742,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 211,
											"end": 5742,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 211,
											"end": 5742,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 211,
											"end": 5742,
											"name": "SHR"
										},
										{
											"begin": 211,
											"end": 5742,
											"name": "DUP1"
										},
										{
											"begin": 211,
											"end": 5742,
											"name": "PUSH",
											"value": "45848DFC"
										},
										{
											"begin": 211,
											"end": 5742,
											"name": "EQ"
										},
										{
											"begin": 211,
											"end": 5742,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 211,
											"end": 5742,
											"name": "JUMPI"
										},
										{
											"begin": 211,
											"end": 5742,
											"name": "DUP1"
										},
										{
											"begin": 211,
											"end": 5742,
											"name": "PUSH",
											"value": "4D6A304C"
										},
										{
											"begin": 211,
											"end": 5742,
											"name": "EQ"
										},
										{
											"begin": 211,
											"end": 5742,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 211,
											"end": 5742,
											"name": "JUMPI"
										},
										{
											"begin": 211,
											"end": 5742,
											"name": "DUP1"
										},
										{
											"begin": 211,
											"end": 5742,
											"name": "PUSH",
											"value": "D459FC46"
										},
										{
											"begin": 211,
											"end": 5742,
											"name": "EQ"
										},
										{
											"begin": 211,
											"end": 5742,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 211,
											"end": 5742,
											"name": "JUMPI"
										},
										{
											"begin": 211,
											"end": 5742,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 211,
											"end": 5742,
											"name": "JUMPDEST"
										},
										{
											"begin": 211,
											"end": 5742,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 211,
											"end": 5742,
											"name": "DUP1"
										},
										{
											"begin": 211,
											"end": 5742,
											"name": "REVERT"
										},
										{
											"begin": 4430,
											"end": 4697,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 4430,
											"end": 4697,
											"name": "JUMPDEST"
										},
										{
											"begin": 4430,
											"end": 4697,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 4430,
											"end": 4697,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 4430,
											"end": 4697,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4430,
											"end": 4697,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 4430,
											"end": 4697,
											"name": "JUMPDEST"
										},
										{
											"begin": 4430,
											"end": 4697,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4430,
											"end": 4697,
											"name": "MLOAD"
										},
										{
											"begin": 4430,
											"end": 4697,
											"name": "DUP1"
										},
										{
											"begin": 4430,
											"end": 4697,
											"name": "DUP1"
										},
										{
											"begin": 4430,
											"end": 4697,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4430,
											"end": 4697,
											"name": "ADD"
										},
										{
											"begin": 4430,
											"end": 4697,
											"name": "DUP3"
										},
										{
											"begin": 4430,
											"end": 4697,
											"name": "DUP2"
										},
										{
											"begin": 4430,
											"end": 4697,
											"name": "SUB"
										},
										{
											"begin": 4430,
											"end": 4697,
											"name": "DUP3"
										},
										{
											"begin": 4430,
											"end": 4697,
											"name": "MSTORE"
										},
										{
											"begin": 4430,
											"end": 4697,
											"name": "DUP4"
										},
										{
											"begin": 4430,
											"end": 4697,
											"name": "DUP2"
										},
										{
											"begin": 4430,
											"end": 4697,
											"name": "DUP2"
										},
										{
											"begin": 4430,
											"end": 4697,
											"name": "MLOAD"
										},
										{
											"begin": 4430,
											"end": 4697,
											"name": "DUP2"
										},
										{
											"begin": 4430,
											"end": 4697,
											"name": "MSTORE"
										},
										{
											"begin": 4430,
											"end": 4697,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4430,
											"end": 4697,
											"name": "ADD"
										},
										{
											"begin": 4430,
											"end": 4697,
											"name": "SWAP2"
										},
										{
											"begin": 4430,
											"end": 4697,
											"name": "POP"
										},
										{
											"begin": 4430,
											"end": 4697,
											"name": "DUP1"
										},
										{
											"begin": 4430,
											"end": 4697,
											"name": "MLOAD"
										},
										{
											"begin": 4430,
											"end": 4697,
											"name": "SWAP1"
										},
										{
											"begin": 4430,
											"end": 4697,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4430,
											"end": 4697,
											"name": "ADD"
										},
										{
											"begin": 4430,
											"end": 4697,
											"name": "SWAP1"
										},
										{
											"begin": 4430,
											"end": 4697,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4430,
											"end": 4697,
											"name": "MUL"
										},
										{
											"begin": 4430,
											"end": 4697,
											"name": "DUP1"
										},
										{
											"begin": 4430,
											"end": 4697,
											"name": "DUP4"
										},
										{
											"begin": 4430,
											"end": 4697,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 4430,
											"end": 4697,
											"name": "POP"
										},
										{
											"begin": 4430,
											"end": 4697,
											"name": "POP"
										},
										{
											"begin": 4430,
											"end": 4697,
											"name": "POP"
										},
										{
											"begin": 4430,
											"end": 4697,
											"name": "SWAP1"
										},
										{
											"begin": 4430,
											"end": 4697,
											"name": "POP"
										},
										{
											"begin": 4430,
											"end": 4697,
											"name": "ADD"
										},
										{
											"begin": 4430,
											"end": 4697,
											"name": "SWAP3"
										},
										{
											"begin": 4430,
											"end": 4697,
											"name": "POP"
										},
										{
											"begin": 4430,
											"end": 4697,
											"name": "POP"
										},
										{
											"begin": 4430,
											"end": 4697,
											"name": "POP"
										},
										{
											"begin": 4430,
											"end": 4697,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4430,
											"end": 4697,
											"name": "MLOAD"
										},
										{
											"begin": 4430,
											"end": 4697,
											"name": "DUP1"
										},
										{
											"begin": 4430,
											"end": 4697,
											"name": "SWAP2"
										},
										{
											"begin": 4430,
											"end": 4697,
											"name": "SUB"
										},
										{
											"begin": 4430,
											"end": 4697,
											"name": "SWAP1"
										},
										{
											"begin": 4430,
											"end": 4697,
											"name": "RETURN"
										},
										{
											"begin": 1070,
											"end": 1208,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 1070,
											"end": 1208,
											"name": "JUMPDEST"
										},
										{
											"begin": 1070,
											"end": 1208,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 1070,
											"end": 1208,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 1070,
											"end": 1208,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1070,
											"end": 1208,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 1070,
											"end": 1208,
											"name": "JUMPDEST"
										},
										{
											"begin": 1070,
											"end": 1208,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1070,
											"end": 1208,
											"name": "MLOAD"
										},
										{
											"begin": 1070,
											"end": 1208,
											"name": "DUP1"
										},
										{
											"begin": 1070,
											"end": 1208,
											"name": "DUP5"
										},
										{
											"begin": 1070,
											"end": 1208,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1070,
											"end": 1208,
											"name": "AND"
										},
										{
											"begin": 1070,
											"end": 1208,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1070,
											"end": 1208,
											"name": "AND"
										},
										{
											"begin": 1070,
											"end": 1208,
											"name": "DUP2"
										},
										{
											"begin": 1070,
											"end": 1208,
											"name": "MSTORE"
										},
										{
											"begin": 1070,
											"end": 1208,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1070,
											"end": 1208,
											"name": "ADD"
										},
										{
											"begin": 1070,
											"end": 1208,
											"name": "DUP4"
										},
										{
											"begin": 1070,
											"end": 1208,
											"name": "DUP2"
										},
										{
											"begin": 1070,
											"end": 1208,
											"name": "MSTORE"
										},
										{
											"begin": 1070,
											"end": 1208,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1070,
											"end": 1208,
											"name": "ADD"
										},
										{
											"begin": 1070,
											"end": 1208,
											"name": "DUP3"
										},
										{
											"begin": 1070,
											"end": 1208,
											"name": "DUP2"
										},
										{
											"begin": 1070,
											"end": 1208,
											"name": "MSTORE"
										},
										{
											"begin": 1070,
											"end": 1208,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1070,
											"end": 1208,
											"name": "ADD"
										},
										{
											"begin": 1070,
											"end": 1208,
											"name": "SWAP4"
										},
										{
											"begin": 1070,
											"end": 1208,
											"name": "POP"
										},
										{
											"begin": 1070,
											"end": 1208,
											"name": "POP"
										},
										{
											"begin": 1070,
											"end": 1208,
											"name": "POP"
										},
										{
											"begin": 1070,
											"end": 1208,
											"name": "POP"
										},
										{
											"begin": 1070,
											"end": 1208,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1070,
											"end": 1208,
											"name": "MLOAD"
										},
										{
											"begin": 1070,
											"end": 1208,
											"name": "DUP1"
										},
										{
											"begin": 1070,
											"end": 1208,
											"name": "SWAP2"
										},
										{
											"begin": 1070,
											"end": 1208,
											"name": "SUB"
										},
										{
											"begin": 1070,
											"end": 1208,
											"name": "SWAP1"
										},
										{
											"begin": 1070,
											"end": 1208,
											"name": "RETURN"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "JUMPDEST"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "DUP1"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "DUP2"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "ADD"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP1"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "DUP1"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "DUP1"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP1"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "ADD"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP1"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP3"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP2"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP1"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "DUP1"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP1"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "ADD"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP1"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP3"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP2"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP1"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "DUP1"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP1"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "ADD"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP1"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP3"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP2"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP1"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "DUP1"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "AND"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP1"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "ADD"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP1"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP3"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP2"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP1"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "DUP1"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP1"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "ADD"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP1"
										},
										{
											"begin": 21,
											"end": 32,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 8,
											"end": 19,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 46,
											"end": 47,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 43,
											"end": 44,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 48,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "DUP3"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "ADD"
										},
										{
											"begin": 35,
											"end": 44,
											"name": "DUP4"
										},
										{
											"begin": 28,
											"end": 32,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "DUP3"
										},
										{
											"begin": 8,
											"end": 33,
											"name": "ADD"
										},
										{
											"begin": 5,
											"end": 45,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 59,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 56,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 60,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "DUP1"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP1"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "ADD"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP2"
										},
										{
											"begin": 101,
											"end": 110,
											"name": "DUP5"
										},
										{
											"begin": 95,
											"end": 97,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4"
										},
										{
											"begin": 77,
											"end": 98,
											"name": "MUL"
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5"
										},
										{
											"begin": 63,
											"end": 99,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 111,
											"name": "GT"
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT"
										},
										{
											"begin": 11,
											"end": 119,
											"name": "OR"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 129,
											"end": 130,
											"name": "DUP1"
										},
										{
											"begin": 122,
											"end": 134,
											"name": "REVERT"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP2"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP1"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "DUP1"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "DUP1"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "MUL"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "ADD"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "MLOAD"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP1"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "DUP2"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "ADD"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "MSTORE"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "DUP1"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP4"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP3"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP2"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP1"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "DUP2"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "DUP2"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "MSTORE"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "ADD"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "DUP4"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "DUP4"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "MUL"
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1"
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3"
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5"
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2"
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE"
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT"
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3"
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD"
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP"
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4"
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "POP"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "POP"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "POP"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "POP"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "POP"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "POP"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP2"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP3"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP2"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP3"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP1"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "DUP1"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP1"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "ADD"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP1"
										},
										{
											"begin": 21,
											"end": 32,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 8,
											"end": 19,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 46,
											"end": 47,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 43,
											"end": 44,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 48,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "DUP3"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "ADD"
										},
										{
											"begin": 35,
											"end": 44,
											"name": "DUP4"
										},
										{
											"begin": 28,
											"end": 32,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "DUP3"
										},
										{
											"begin": 8,
											"end": 33,
											"name": "ADD"
										},
										{
											"begin": 5,
											"end": 45,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 59,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 56,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 60,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "DUP1"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP1"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "ADD"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP2"
										},
										{
											"begin": 101,
											"end": 110,
											"name": "DUP5"
										},
										{
											"begin": 95,
											"end": 97,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4"
										},
										{
											"begin": 77,
											"end": 98,
											"name": "MUL"
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5"
										},
										{
											"begin": 63,
											"end": 99,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 111,
											"name": "GT"
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT"
										},
										{
											"begin": 11,
											"end": 119,
											"name": "OR"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 129,
											"end": 130,
											"name": "DUP1"
										},
										{
											"begin": 122,
											"end": 134,
											"name": "REVERT"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP2"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP1"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "DUP1"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "DUP1"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "MUL"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "ADD"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "MLOAD"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP1"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "DUP2"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "ADD"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "MSTORE"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "DUP1"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP4"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP3"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP2"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP1"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "DUP2"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "DUP2"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "MSTORE"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "ADD"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "DUP4"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "DUP4"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "MUL"
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1"
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3"
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5"
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2"
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE"
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT"
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3"
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD"
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP"
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4"
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "POP"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "POP"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "POP"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "POP"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "POP"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "POP"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP2"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP3"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP2"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP3"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP1"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "DUP1"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP1"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "ADD"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP1"
										},
										{
											"begin": 21,
											"end": 32,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 8,
											"end": 19,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 46,
											"end": 47,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 43,
											"end": 44,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 48,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "DUP3"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "ADD"
										},
										{
											"begin": 35,
											"end": 44,
											"name": "DUP4"
										},
										{
											"begin": 28,
											"end": 32,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "DUP3"
										},
										{
											"begin": 8,
											"end": 33,
											"name": "ADD"
										},
										{
											"begin": 5,
											"end": 45,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 59,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 56,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 60,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "DUP1"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP1"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "ADD"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP2"
										},
										{
											"begin": 101,
											"end": 110,
											"name": "DUP5"
										},
										{
											"begin": 95,
											"end": 97,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4"
										},
										{
											"begin": 77,
											"end": 98,
											"name": "MUL"
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5"
										},
										{
											"begin": 63,
											"end": 99,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 111,
											"name": "GT"
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT"
										},
										{
											"begin": 11,
											"end": 119,
											"name": "OR"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 129,
											"end": 130,
											"name": "DUP1"
										},
										{
											"begin": 122,
											"end": 134,
											"name": "REVERT"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP2"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP1"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "DUP1"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "DUP1"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "MUL"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "ADD"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "MLOAD"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP1"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "DUP2"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "ADD"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "MSTORE"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "DUP1"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP4"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP3"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP2"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP1"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "DUP2"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "DUP2"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "MSTORE"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "ADD"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "DUP4"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "DUP4"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "MUL"
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1"
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3"
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5"
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2"
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE"
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT"
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3"
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD"
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP"
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4"
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "POP"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "POP"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "POP"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "POP"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "POP"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "POP"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP2"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP3"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP2"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP3"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP1"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "POP"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "POP"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "POP"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "JUMPDEST"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "MLOAD"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "DUP1"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "DUP3"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "ISZERO"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "ISZERO"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "ISZERO"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "ISZERO"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "DUP2"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "MSTORE"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "ADD"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP2"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "POP"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "POP"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "MLOAD"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "DUP1"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP2"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SUB"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP1"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "RETURN"
										},
										{
											"begin": 4430,
											"end": 4697,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 4430,
											"end": 4697,
											"name": "JUMPDEST"
										},
										{
											"begin": 4485,
											"end": 4501,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 4517,
											"end": 4537,
											"name": "DUP1"
										},
										{
											"begin": 4554,
											"end": 4563,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4554,
											"end": 4570,
											"name": "DUP1"
										},
										{
											"begin": 4554,
											"end": 4570,
											"name": "SLOAD"
										},
										{
											"begin": 4554,
											"end": 4570,
											"name": "SWAP1"
										},
										{
											"begin": 4554,
											"end": 4570,
											"name": "POP"
										},
										{
											"begin": 4540,
											"end": 4571,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4540,
											"end": 4571,
											"name": "MLOAD"
										},
										{
											"begin": 4540,
											"end": 4571,
											"name": "SWAP1"
										},
										{
											"begin": 4540,
											"end": 4571,
											"name": "DUP1"
										},
										{
											"begin": 4540,
											"end": 4571,
											"name": "DUP3"
										},
										{
											"begin": 4540,
											"end": 4571,
											"name": "MSTORE"
										},
										{
											"begin": 4540,
											"end": 4571,
											"name": "DUP1"
										},
										{
											"begin": 4540,
											"end": 4571,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4540,
											"end": 4571,
											"name": "MUL"
										},
										{
											"begin": 4540,
											"end": 4571,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4540,
											"end": 4571,
											"name": "ADD"
										},
										{
											"begin": 4540,
											"end": 4571,
											"name": "DUP3"
										},
										{
											"begin": 4540,
											"end": 4571,
											"name": "ADD"
										},
										{
											"begin": 4540,
											"end": 4571,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4540,
											"end": 4571,
											"name": "MSTORE"
										},
										{
											"begin": 4540,
											"end": 4571,
											"name": "DUP1"
										},
										{
											"begin": 4540,
											"end": 4571,
											"name": "ISZERO"
										},
										{
											"begin": 4540,
											"end": 4571,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 4540,
											"end": 4571,
											"name": "JUMPI"
										},
										{
											"begin": 4540,
											"end": 4571,
											"name": "DUP2"
										},
										{
											"begin": 4540,
											"end": 4571,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4540,
											"end": 4571,
											"name": "ADD"
										},
										{
											"begin": 29,
											"end": 31,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21,
											"end": 27,
											"name": "DUP3"
										},
										{
											"begin": 17,
											"end": 32,
											"name": "MUL"
										},
										{
											"begin": 117,
											"end": 121,
											"name": "DUP1"
										},
										{
											"begin": 105,
											"end": 115,
											"name": "CODESIZE"
										},
										{
											"begin": 97,
											"end": 103,
											"name": "DUP4"
										},
										{
											"begin": 88,
											"end": 122,
											"name": "CODECOPY"
										},
										{
											"begin": 148,
											"end": 152,
											"name": "DUP1"
										},
										{
											"begin": 140,
											"end": 146,
											"name": "DUP3"
										},
										{
											"begin": 136,
											"end": 153,
											"name": "ADD"
										},
										{
											"begin": 126,
											"end": 153,
											"name": "SWAP2"
										},
										{
											"begin": 126,
											"end": 153,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 157,
											"name": "POP"
										},
										{
											"begin": 4540,
											"end": 4571,
											"name": "SWAP1"
										},
										{
											"begin": 4540,
											"end": 4571,
											"name": "POP"
										},
										{
											"begin": 4540,
											"end": 4571,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 4540,
											"end": 4571,
											"name": "JUMPDEST"
										},
										{
											"begin": 4540,
											"end": 4571,
											"name": "POP"
										},
										{
											"begin": 4517,
											"end": 4571,
											"name": "SWAP1"
										},
										{
											"begin": 4517,
											"end": 4571,
											"name": "POP"
										},
										{
											"begin": 4586,
											"end": 4592,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4595,
											"end": 4596,
											"name": "DUP1"
										},
										{
											"begin": 4586,
											"end": 4596,
											"name": "SWAP1"
										},
										{
											"begin": 4586,
											"end": 4596,
											"name": "POP"
										},
										{
											"begin": 4581,
											"end": 4671,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 4581,
											"end": 4671,
											"name": "JUMPDEST"
										},
										{
											"begin": 4602,
											"end": 4611,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4602,
											"end": 4618,
											"name": "DUP1"
										},
										{
											"begin": 4602,
											"end": 4618,
											"name": "SLOAD"
										},
										{
											"begin": 4602,
											"end": 4618,
											"name": "SWAP1"
										},
										{
											"begin": 4602,
											"end": 4618,
											"name": "POP"
										},
										{
											"begin": 4598,
											"end": 4599,
											"name": "DUP2"
										},
										{
											"begin": 4598,
											"end": 4618,
											"name": "LT"
										},
										{
											"begin": 4581,
											"end": 4671,
											"name": "ISZERO"
										},
										{
											"begin": 4581,
											"end": 4671,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 4581,
											"end": 4671,
											"name": "JUMPI"
										},
										{
											"begin": 4648,
											"end": 4657,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4658,
											"end": 4659,
											"name": "DUP2"
										},
										{
											"begin": 4648,
											"end": 4660,
											"name": "DUP2"
										},
										{
											"begin": 4648,
											"end": 4660,
											"name": "SLOAD"
										},
										{
											"begin": 4648,
											"end": 4660,
											"name": "DUP2"
										},
										{
											"begin": 4648,
											"end": 4660,
											"name": "LT"
										},
										{
											"begin": 4648,
											"end": 4660,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 4648,
											"end": 4660,
											"name": "JUMPI"
										},
										{
											"begin": 4648,
											"end": 4660,
											"name": "INVALID"
										},
										{
											"begin": 4648,
											"end": 4660,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 4648,
											"end": 4660,
											"name": "JUMPDEST"
										},
										{
											"begin": 4648,
											"end": 4660,
											"name": "SWAP1"
										},
										{
											"begin": 4648,
											"end": 4660,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4648,
											"end": 4660,
											"name": "MSTORE"
										},
										{
											"begin": 4648,
											"end": 4660,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4648,
											"end": 4660,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4648,
											"end": 4660,
											"name": "KECCAK256"
										},
										{
											"begin": 4648,
											"end": 4660,
											"name": "ADD"
										},
										{
											"begin": 4648,
											"end": 4660,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4648,
											"end": 4660,
											"name": "SWAP1"
										},
										{
											"begin": 4648,
											"end": 4660,
											"name": "SLOAD"
										},
										{
											"begin": 4648,
											"end": 4660,
											"name": "SWAP1"
										},
										{
											"begin": 4648,
											"end": 4660,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4648,
											"end": 4660,
											"name": "EXP"
										},
										{
											"begin": 4648,
											"end": 4660,
											"name": "SWAP1"
										},
										{
											"begin": 4648,
											"end": 4660,
											"name": "DIV"
										},
										{
											"begin": 4648,
											"end": 4660,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4648,
											"end": 4660,
											"name": "AND"
										},
										{
											"begin": 4639,
											"end": 4642,
											"name": "DUP3"
										},
										{
											"begin": 4643,
											"end": 4644,
											"name": "DUP3"
										},
										{
											"begin": 4639,
											"end": 4645,
											"name": "DUP2"
										},
										{
											"begin": 4639,
											"end": 4645,
											"name": "MLOAD"
										},
										{
											"begin": 4639,
											"end": 4645,
											"name": "DUP2"
										},
										{
											"begin": 4639,
											"end": 4645,
											"name": "LT"
										},
										{
											"begin": 4639,
											"end": 4645,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 4639,
											"end": 4645,
											"name": "JUMPI"
										},
										{
											"begin": 4639,
											"end": 4645,
											"name": "INVALID"
										},
										{
											"begin": 4639,
											"end": 4645,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 4639,
											"end": 4645,
											"name": "JUMPDEST"
										},
										{
											"begin": 4639,
											"end": 4645,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4639,
											"end": 4645,
											"name": "MUL"
										},
										{
											"begin": 4639,
											"end": 4645,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4639,
											"end": 4645,
											"name": "ADD"
										},
										{
											"begin": 4639,
											"end": 4645,
											"name": "ADD"
										},
										{
											"begin": 4639,
											"end": 4660,
											"name": "SWAP1"
										},
										{
											"begin": 4639,
											"end": 4660,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4639,
											"end": 4660,
											"name": "AND"
										},
										{
											"begin": 4639,
											"end": 4660,
											"name": "SWAP1"
										},
										{
											"begin": 4639,
											"end": 4660,
											"name": "DUP2"
										},
										{
											"begin": 4639,
											"end": 4660,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4639,
											"end": 4660,
											"name": "AND"
										},
										{
											"begin": 4639,
											"end": 4660,
											"name": "DUP2"
										},
										{
											"begin": 4639,
											"end": 4660,
											"name": "MSTORE"
										},
										{
											"begin": 4639,
											"end": 4660,
											"name": "POP"
										},
										{
											"begin": 4639,
											"end": 4660,
											"name": "POP"
										},
										{
											"begin": 4620,
											"end": 4623,
											"name": "DUP1"
										},
										{
											"begin": 4620,
											"end": 4623,
											"name": "DUP1"
										},
										{
											"begin": 4620,
											"end": 4623,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4620,
											"end": 4623,
											"name": "ADD"
										},
										{
											"begin": 4620,
											"end": 4623,
											"name": "SWAP2"
										},
										{
											"begin": 4620,
											"end": 4623,
											"name": "POP"
										},
										{
											"begin": 4620,
											"end": 4623,
											"name": "POP"
										},
										{
											"begin": 4581,
											"end": 4671,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 4581,
											"end": 4671,
											"name": "JUMP"
										},
										{
											"begin": 4581,
											"end": 4671,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 4581,
											"end": 4671,
											"name": "JUMPDEST"
										},
										{
											"begin": 4581,
											"end": 4671,
											"name": "POP"
										},
										{
											"begin": 4687,
											"end": 4690,
											"name": "DUP1"
										},
										{
											"begin": 4680,
											"end": 4690,
											"name": "SWAP2"
										},
										{
											"begin": 4680,
											"end": 4690,
											"name": "POP"
										},
										{
											"begin": 4680,
											"end": 4690,
											"name": "POP"
										},
										{
											"begin": 4430,
											"end": 4697,
											"name": "SWAP1"
										},
										{
											"begin": 4430,
											"end": 4697,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1070,
											"end": 1208,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 1070,
											"end": 1208,
											"name": "JUMPDEST"
										},
										{
											"begin": 1133,
											"end": 1139,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1141,
											"end": 1148,
											"name": "DUP1"
										},
										{
											"begin": 1150,
											"end": 1154,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1174,
											"end": 1186,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1174,
											"end": 1186,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1174,
											"end": 1186,
											"name": "SWAP1"
										},
										{
											"begin": 1174,
											"end": 1186,
											"name": "SLOAD"
										},
										{
											"begin": 1174,
											"end": 1186,
											"name": "SWAP1"
										},
										{
											"begin": 1174,
											"end": 1186,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1174,
											"end": 1186,
											"name": "EXP"
										},
										{
											"begin": 1174,
											"end": 1186,
											"name": "SWAP1"
										},
										{
											"begin": 1174,
											"end": 1186,
											"name": "DIV"
										},
										{
											"begin": 1174,
											"end": 1186,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1174,
											"end": 1186,
											"name": "AND"
										},
										{
											"begin": 1188,
											"end": 1192,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1188,
											"end": 1192,
											"name": "SLOAD"
										},
										{
											"begin": 1194,
											"end": 1200,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1194,
											"end": 1200,
											"name": "SLOAD"
										},
										{
											"begin": 1166,
											"end": 1201,
											"name": "SWAP3"
										},
										{
											"begin": 1166,
											"end": 1201,
											"name": "POP"
										},
										{
											"begin": 1166,
											"end": 1201,
											"name": "SWAP3"
										},
										{
											"begin": 1166,
											"end": 1201,
											"name": "POP"
										},
										{
											"begin": 1166,
											"end": 1201,
											"name": "SWAP3"
										},
										{
											"begin": 1166,
											"end": 1201,
											"name": "POP"
										},
										{
											"begin": 1070,
											"end": 1208,
											"name": "SWAP1"
										},
										{
											"begin": 1070,
											"end": 1208,
											"name": "SWAP2"
										},
										{
											"begin": 1070,
											"end": 1208,
											"name": "SWAP3"
										},
										{
											"begin": 1070,
											"end": 1208,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "JUMPDEST"
										},
										{
											"begin": 1853,
											"end": 1857,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1925,
											"end": 1931,
											"name": "DUP1"
										},
										{
											"begin": 1925,
											"end": 1943,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1932,
											"end": 1942,
											"name": "CALLER"
										},
										{
											"begin": 1925,
											"end": 1943,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1925,
											"end": 1943,
											"name": "AND"
										},
										{
											"begin": 1925,
											"end": 1943,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1925,
											"end": 1943,
											"name": "AND"
										},
										{
											"begin": 1925,
											"end": 1943,
											"name": "DUP2"
										},
										{
											"begin": 1925,
											"end": 1943,
											"name": "MSTORE"
										},
										{
											"begin": 1925,
											"end": 1943,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1925,
											"end": 1943,
											"name": "ADD"
										},
										{
											"begin": 1925,
											"end": 1943,
											"name": "SWAP1"
										},
										{
											"begin": 1925,
											"end": 1943,
											"name": "DUP2"
										},
										{
											"begin": 1925,
											"end": 1943,
											"name": "MSTORE"
										},
										{
											"begin": 1925,
											"end": 1943,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1925,
											"end": 1943,
											"name": "ADD"
										},
										{
											"begin": 1925,
											"end": 1943,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1925,
											"end": 1943,
											"name": "KECCAK256"
										},
										{
											"begin": 1925,
											"end": 1943,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1925,
											"end": 1943,
											"name": "SWAP1"
										},
										{
											"begin": 1925,
											"end": 1943,
											"name": "SLOAD"
										},
										{
											"begin": 1925,
											"end": 1943,
											"name": "SWAP1"
										},
										{
											"begin": 1925,
											"end": 1943,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1925,
											"end": 1943,
											"name": "EXP"
										},
										{
											"begin": 1925,
											"end": 1943,
											"name": "SWAP1"
										},
										{
											"begin": 1925,
											"end": 1943,
											"name": "DIV"
										},
										{
											"begin": 1925,
											"end": 1943,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1925,
											"end": 1943,
											"name": "AND"
										},
										{
											"begin": 1917,
											"end": 1944,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 1917,
											"end": 1944,
											"name": "JUMPI"
										},
										{
											"begin": 1917,
											"end": 1944,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1917,
											"end": 1944,
											"name": "DUP1"
										},
										{
											"begin": 1917,
											"end": 1944,
											"name": "REVERT"
										},
										{
											"begin": 1917,
											"end": 1944,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 1917,
											"end": 1944,
											"name": "JUMPDEST"
										},
										{
											"begin": 2110,
											"end": 2121,
											"name": "DUP7"
										},
										{
											"begin": 2092,
											"end": 2105,
											"name": "DUP9"
										},
										{
											"begin": 2082,
											"end": 2106,
											"name": "BLOCKHASH"
										},
										{
											"begin": 2082,
											"end": 2121,
											"name": "EQ"
										},
										{
											"begin": 2074,
											"end": 2122,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 2074,
											"end": 2122,
											"name": "JUMPI"
										},
										{
											"begin": 2074,
											"end": 2122,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2122,
											"name": "DUP1"
										},
										{
											"begin": 2074,
											"end": 2122,
											"name": "REVERT"
										},
										{
											"begin": 2074,
											"end": 2122,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 2074,
											"end": 2122,
											"name": "JUMPDEST"
										},
										{
											"begin": 2206,
											"end": 2207,
											"name": "DUP3"
										},
										{
											"begin": 2206,
											"end": 2214,
											"name": "MLOAD"
										},
										{
											"begin": 2194,
											"end": 2195,
											"name": "DUP5"
										},
										{
											"begin": 2194,
											"end": 2202,
											"name": "MLOAD"
										},
										{
											"begin": 2194,
											"end": 2214,
											"name": "EQ"
										},
										{
											"begin": 2186,
											"end": 2215,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 2186,
											"end": 2215,
											"name": "JUMPI"
										},
										{
											"begin": 2186,
											"end": 2215,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2186,
											"end": 2215,
											"name": "DUP1"
										},
										{
											"begin": 2186,
											"end": 2215,
											"name": "REVERT"
										},
										{
											"begin": 2186,
											"end": 2215,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 2186,
											"end": 2215,
											"name": "JUMPDEST"
										},
										{
											"begin": 2245,
											"end": 2246,
											"name": "DUP2"
										},
										{
											"begin": 2245,
											"end": 2253,
											"name": "MLOAD"
										},
										{
											"begin": 2233,
											"end": 2234,
											"name": "DUP5"
										},
										{
											"begin": 2233,
											"end": 2241,
											"name": "MLOAD"
										},
										{
											"begin": 2233,
											"end": 2253,
											"name": "EQ"
										},
										{
											"begin": 2225,
											"end": 2254,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 2225,
											"end": 2254,
											"name": "JUMPI"
										},
										{
											"begin": 2225,
											"end": 2254,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2225,
											"end": 2254,
											"name": "DUP1"
										},
										{
											"begin": 2225,
											"end": 2254,
											"name": "REVERT"
										},
										{
											"begin": 2225,
											"end": 2254,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 2225,
											"end": 2254,
											"name": "JUMPDEST"
										},
										{
											"begin": 2357,
											"end": 2372,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 2357,
											"end": 2372,
											"name": "SLOAD"
										},
										{
											"begin": 2345,
											"end": 2356,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 2345,
											"end": 2356,
											"name": "SLOAD"
										},
										{
											"begin": 2342,
											"end": 2343,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2328,
											"end": 2341,
											"name": "DUP8"
										},
										{
											"begin": 2328,
											"end": 2343,
											"name": "ADD"
										},
										{
											"begin": 2327,
											"end": 2356,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2327,
											"end": 2356,
											"name": "AND"
										},
										{
											"begin": 2327,
											"end": 2356,
											"name": "MUL"
										},
										{
											"begin": 2327,
											"end": 2372,
											"name": "ADD"
										},
										{
											"begin": 2312,
											"end": 2324,
											"name": "NUMBER"
										},
										{
											"begin": 2312,
											"end": 2372,
											"name": "LT"
										},
										{
											"begin": 2308,
											"end": 2411,
											"name": "ISZERO"
										},
										{
											"begin": 2308,
											"end": 2411,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 2308,
											"end": 2411,
											"name": "JUMPI"
										},
										{
											"begin": 2395,
											"end": 2400,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2388,
											"end": 2400,
											"name": "SWAP1"
										},
										{
											"begin": 2388,
											"end": 2400,
											"name": "POP"
										},
										{
											"begin": 2388,
											"end": 2400,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 2388,
											"end": 2400,
											"name": "JUMP"
										},
										{
											"begin": 2308,
											"end": 2411,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 2308,
											"end": 2411,
											"name": "JUMPDEST"
										},
										{
											"begin": 2481,
											"end": 2493,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2481,
											"end": 2493,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2481,
											"end": 2493,
											"name": "SWAP1"
										},
										{
											"begin": 2481,
											"end": 2493,
											"name": "SLOAD"
										},
										{
											"begin": 2481,
											"end": 2493,
											"name": "SWAP1"
										},
										{
											"begin": 2481,
											"end": 2493,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2481,
											"end": 2493,
											"name": "EXP"
										},
										{
											"begin": 2481,
											"end": 2493,
											"name": "SWAP1"
										},
										{
											"begin": 2481,
											"end": 2493,
											"name": "DIV"
										},
										{
											"begin": 2481,
											"end": 2493,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2481,
											"end": 2493,
											"name": "AND"
										},
										{
											"begin": 2465,
											"end": 2493,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2465,
											"end": 2493,
											"name": "AND"
										},
										{
											"begin": 2465,
											"end": 2478,
											"name": "DUP6"
										},
										{
											"begin": 2465,
											"end": 2493,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2465,
											"end": 2493,
											"name": "AND"
										},
										{
											"begin": 2465,
											"end": 2493,
											"name": "LT"
										},
										{
											"begin": 2461,
											"end": 2532,
											"name": "ISZERO"
										},
										{
											"begin": 2461,
											"end": 2532,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 2461,
											"end": 2532,
											"name": "JUMPI"
										},
										{
											"begin": 2516,
											"end": 2521,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP1"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "POP"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "JUMP"
										},
										{
											"begin": 2461,
											"end": 2532,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 2461,
											"end": 2532,
											"name": "JUMPDEST"
										},
										{
											"begin": 2605,
											"end": 2617,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2605,
											"end": 2617,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2605,
											"end": 2617,
											"name": "SWAP1"
										},
										{
											"begin": 2605,
											"end": 2617,
											"name": "SLOAD"
										},
										{
											"begin": 2605,
											"end": 2617,
											"name": "SWAP1"
										},
										{
											"begin": 2605,
											"end": 2617,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2605,
											"end": 2617,
											"name": "EXP"
										},
										{
											"begin": 2605,
											"end": 2617,
											"name": "SWAP1"
										},
										{
											"begin": 2605,
											"end": 2617,
											"name": "DIV"
										},
										{
											"begin": 2605,
											"end": 2617,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2605,
											"end": 2617,
											"name": "AND"
										},
										{
											"begin": 2588,
											"end": 2617,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2588,
											"end": 2617,
											"name": "AND"
										},
										{
											"begin": 2588,
											"end": 2601,
											"name": "DUP6"
										},
										{
											"begin": 2588,
											"end": 2617,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2588,
											"end": 2617,
											"name": "AND"
										},
										{
											"begin": 2588,
											"end": 2617,
											"name": "EQ"
										},
										{
											"begin": 2588,
											"end": 2656,
											"name": "DUP1"
										},
										{
											"begin": 2588,
											"end": 2656,
											"name": "ISZERO"
										},
										{
											"begin": 2588,
											"end": 2656,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 2588,
											"end": 2656,
											"name": "JUMPI"
										},
										{
											"begin": 2588,
											"end": 2656,
											"name": "POP"
										},
										{
											"begin": 2639,
											"end": 2640,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2622,
											"end": 2635,
											"name": "DUP6"
										},
										{
											"begin": 2622,
											"end": 2640,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2622,
											"end": 2640,
											"name": "AND"
										},
										{
											"begin": 2622,
											"end": 2640,
											"name": "EQ"
										},
										{
											"begin": 2622,
											"end": 2640,
											"name": "ISZERO"
										},
										{
											"begin": 2622,
											"end": 2655,
											"name": "DUP1"
										},
										{
											"begin": 2622,
											"end": 2655,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 2622,
											"end": 2655,
											"name": "JUMPI"
										},
										{
											"begin": 2622,
											"end": 2655,
											"name": "POP"
										},
										{
											"begin": 2654,
											"end": 2655,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2644,
											"end": 2650,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 2644,
											"end": 2650,
											"name": "SLOAD"
										},
										{
											"begin": 2644,
											"end": 2655,
											"name": "EQ"
										},
										{
											"begin": 2644,
											"end": 2655,
											"name": "ISZERO"
										},
										{
											"begin": 2622,
											"end": 2655,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 2622,
											"end": 2655,
											"name": "JUMPDEST"
										},
										{
											"begin": 2588,
											"end": 2656,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 2588,
											"end": 2656,
											"name": "JUMPDEST"
										},
										{
											"begin": 2584,
											"end": 2695,
											"name": "ISZERO"
										},
										{
											"begin": 2584,
											"end": 2695,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 2584,
											"end": 2695,
											"name": "JUMPI"
										},
										{
											"begin": 2679,
											"end": 2684,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2684,
											"name": "SWAP1"
										},
										{
											"begin": 2672,
											"end": 2684,
											"name": "POP"
										},
										{
											"begin": 2672,
											"end": 2684,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 2672,
											"end": 2684,
											"name": "JUMP"
										},
										{
											"begin": 2584,
											"end": 2695,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 2584,
											"end": 2695,
											"name": "JUMPDEST"
										},
										{
											"begin": 2753,
											"end": 2764,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2753,
											"end": 2758,
											"name": "DUP7"
										},
										{
											"begin": 2753,
											"end": 2764,
											"name": "EQ"
										},
										{
											"begin": 2749,
											"end": 2802,
											"name": "ISZERO"
										},
										{
											"begin": 2749,
											"end": 2802,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 2749,
											"end": 2802,
											"name": "JUMPI"
										},
										{
											"begin": 2786,
											"end": 2791,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2779,
											"end": 2791,
											"name": "SWAP1"
										},
										{
											"begin": 2779,
											"end": 2791,
											"name": "POP"
										},
										{
											"begin": 2779,
											"end": 2791,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 2779,
											"end": 2791,
											"name": "JUMP"
										},
										{
											"begin": 2749,
											"end": 2802,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 2749,
											"end": 2802,
											"name": "JUMPDEST"
										},
										{
											"begin": 3294,
											"end": 3312,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3347,
											"end": 3351,
											"name": "PUSH",
											"value": "19"
										},
										{
											"begin": 3342,
											"end": 3352,
											"name": "PUSH",
											"value": "F8"
										},
										{
											"begin": 3342,
											"end": 3352,
											"name": "SHL"
										},
										{
											"begin": 3359,
											"end": 3360,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3354,
											"end": 3361,
											"name": "PUSH",
											"value": "F8"
										},
										{
											"begin": 3354,
											"end": 3361,
											"name": "SHL"
										},
										{
											"begin": 3363,
											"end": 3367,
											"name": "ADDRESS"
										},
										{
											"begin": 3369,
											"end": 3382,
											"name": "DUP9"
										},
										{
											"begin": 3384,
											"end": 3389,
											"name": "DUP11"
										},
										{
											"begin": 3325,
											"end": 3390,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3325,
											"end": 3390,
											"name": "MLOAD"
										},
										{
											"begin": 3325,
											"end": 3390,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3325,
											"end": 3390,
											"name": "ADD"
										},
										{
											"begin": 3325,
											"end": 3390,
											"name": "DUP1"
										},
										{
											"begin": 3325,
											"end": 3390,
											"name": "DUP7"
										},
										{
											"begin": 3325,
											"end": 3390,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3325,
											"end": 3390,
											"name": "NOT"
										},
										{
											"begin": 3325,
											"end": 3390,
											"name": "AND"
										},
										{
											"begin": 3325,
											"end": 3390,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3325,
											"end": 3390,
											"name": "NOT"
										},
										{
											"begin": 3325,
											"end": 3390,
											"name": "AND"
										},
										{
											"begin": 3325,
											"end": 3390,
											"name": "DUP2"
										},
										{
											"begin": 3325,
											"end": 3390,
											"name": "MSTORE"
										},
										{
											"begin": 3325,
											"end": 3390,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3325,
											"end": 3390,
											"name": "ADD"
										},
										{
											"begin": 3325,
											"end": 3390,
											"name": "DUP6"
										},
										{
											"begin": 3325,
											"end": 3390,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3325,
											"end": 3390,
											"name": "NOT"
										},
										{
											"begin": 3325,
											"end": 3390,
											"name": "AND"
										},
										{
											"begin": 3325,
											"end": 3390,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3325,
											"end": 3390,
											"name": "NOT"
										},
										{
											"begin": 3325,
											"end": 3390,
											"name": "AND"
										},
										{
											"begin": 3325,
											"end": 3390,
											"name": "DUP2"
										},
										{
											"begin": 3325,
											"end": 3390,
											"name": "MSTORE"
										},
										{
											"begin": 3325,
											"end": 3390,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3325,
											"end": 3390,
											"name": "ADD"
										},
										{
											"begin": 3325,
											"end": 3390,
											"name": "DUP5"
										},
										{
											"begin": 3325,
											"end": 3390,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3325,
											"end": 3390,
											"name": "AND"
										},
										{
											"begin": 3325,
											"end": 3390,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3325,
											"end": 3390,
											"name": "AND"
										},
										{
											"begin": 3325,
											"end": 3390,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 3325,
											"end": 3390,
											"name": "SHL"
										},
										{
											"begin": 3325,
											"end": 3390,
											"name": "DUP2"
										},
										{
											"begin": 3325,
											"end": 3390,
											"name": "MSTORE"
										},
										{
											"begin": 3325,
											"end": 3390,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 3325,
											"end": 3390,
											"name": "ADD"
										},
										{
											"begin": 3325,
											"end": 3390,
											"name": "DUP4"
										},
										{
											"begin": 3325,
											"end": 3390,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3325,
											"end": 3390,
											"name": "AND"
										},
										{
											"begin": 3325,
											"end": 3390,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3325,
											"end": 3390,
											"name": "AND"
										},
										{
											"begin": 3325,
											"end": 3390,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 3325,
											"end": 3390,
											"name": "SHL"
										},
										{
											"begin": 3325,
											"end": 3390,
											"name": "DUP2"
										},
										{
											"begin": 3325,
											"end": 3390,
											"name": "MSTORE"
										},
										{
											"begin": 3325,
											"end": 3390,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 3325,
											"end": 3390,
											"name": "ADD"
										},
										{
											"begin": 3325,
											"end": 3390,
											"name": "DUP3"
										},
										{
											"begin": 3325,
											"end": 3390,
											"name": "DUP2"
										},
										{
											"begin": 3325,
											"end": 3390,
											"name": "MSTORE"
										},
										{
											"begin": 3325,
											"end": 3390,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3325,
											"end": 3390,
											"name": "ADD"
										},
										{
											"begin": 3325,
											"end": 3390,
											"name": "SWAP6"
										},
										{
											"begin": 3325,
											"end": 3390,
											"name": "POP"
										},
										{
											"begin": 3325,
											"end": 3390,
											"name": "POP"
										},
										{
											"begin": 3325,
											"end": 3390,
											"name": "POP"
										},
										{
											"begin": 3325,
											"end": 3390,
											"name": "POP"
										},
										{
											"begin": 3325,
											"end": 3390,
											"name": "POP"
										},
										{
											"begin": 3325,
											"end": 3390,
											"name": "POP"
										},
										{
											"begin": 3325,
											"end": 3390,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3325,
											"end": 3390,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 3325,
											"end": 3390,
											"name": "SWAP1"
										},
										{
											"begin": 3325,
											"end": 3390,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3325,
											"end": 3390,
											"name": "MSTORE"
										},
										{
											"begin": 3315,
											"end": 3391,
											"name": "DUP1"
										},
										{
											"begin": 3315,
											"end": 3391,
											"name": "MLOAD"
										},
										{
											"begin": 3315,
											"end": 3391,
											"name": "SWAP1"
										},
										{
											"begin": 3315,
											"end": 3391,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3315,
											"end": 3391,
											"name": "ADD"
										},
										{
											"begin": 3315,
											"end": 3391,
											"name": "KECCAK256"
										},
										{
											"begin": 3294,
											"end": 3391,
											"name": "SWAP1"
										},
										{
											"begin": 3294,
											"end": 3391,
											"name": "POP"
										},
										{
											"begin": 3402,
											"end": 3419,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "DUP1"
										},
										{
											"begin": 3402,
											"end": 3432,
											"name": "SWAP1"
										},
										{
											"begin": 3402,
											"end": 3432,
											"name": "POP"
										},
										{
											"begin": 3651,
											"end": 3659,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3662,
											"end": 3663,
											"name": "DUP1"
										},
										{
											"begin": 3651,
											"end": 3663,
											"name": "SWAP1"
										},
										{
											"begin": 3651,
											"end": 3663,
											"name": "POP"
										},
										{
											"begin": 3646,
											"end": 4252,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 3646,
											"end": 4252,
											"name": "JUMPDEST"
										},
										{
											"begin": 3671,
											"end": 3672,
											"name": "DUP7"
										},
										{
											"begin": 3671,
											"end": 3679,
											"name": "MLOAD"
										},
										{
											"begin": 3665,
											"end": 3668,
											"name": "DUP2"
										},
										{
											"begin": 3665,
											"end": 3679,
											"name": "LT"
										},
										{
											"begin": 3646,
											"end": 4252,
											"name": "ISZERO"
										},
										{
											"begin": 3646,
											"end": 4252,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 3646,
											"end": 4252,
											"name": "JUMPI"
										},
										{
											"begin": 3701,
											"end": 3715,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3718,
											"end": 3763,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3728,
											"end": 3738,
											"name": "DUP5"
										},
										{
											"begin": 3740,
											"end": 3741,
											"name": "DUP10"
										},
										{
											"begin": 3742,
											"end": 3745,
											"name": "DUP5"
										},
										{
											"begin": 3740,
											"end": 3746,
											"name": "DUP2"
										},
										{
											"begin": 3740,
											"end": 3746,
											"name": "MLOAD"
										},
										{
											"begin": 3740,
											"end": 3746,
											"name": "DUP2"
										},
										{
											"begin": 3740,
											"end": 3746,
											"name": "LT"
										},
										{
											"begin": 3740,
											"end": 3746,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 3740,
											"end": 3746,
											"name": "JUMPI"
										},
										{
											"begin": 3740,
											"end": 3746,
											"name": "INVALID"
										},
										{
											"begin": 3740,
											"end": 3746,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 3740,
											"end": 3746,
											"name": "JUMPDEST"
										},
										{
											"begin": 3740,
											"end": 3746,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3740,
											"end": 3746,
											"name": "MUL"
										},
										{
											"begin": 3740,
											"end": 3746,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3740,
											"end": 3746,
											"name": "ADD"
										},
										{
											"begin": 3740,
											"end": 3746,
											"name": "ADD"
										},
										{
											"begin": 3740,
											"end": 3746,
											"name": "MLOAD"
										},
										{
											"begin": 3748,
											"end": 3749,
											"name": "DUP10"
										},
										{
											"begin": 3750,
											"end": 3753,
											"name": "DUP6"
										},
										{
											"begin": 3748,
											"end": 3754,
											"name": "DUP2"
										},
										{
											"begin": 3748,
											"end": 3754,
											"name": "MLOAD"
										},
										{
											"begin": 3748,
											"end": 3754,
											"name": "DUP2"
										},
										{
											"begin": 3748,
											"end": 3754,
											"name": "LT"
										},
										{
											"begin": 3748,
											"end": 3754,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 3748,
											"end": 3754,
											"name": "JUMPI"
										},
										{
											"begin": 3748,
											"end": 3754,
											"name": "INVALID"
										},
										{
											"begin": 3748,
											"end": 3754,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 3748,
											"end": 3754,
											"name": "JUMPDEST"
										},
										{
											"begin": 3748,
											"end": 3754,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3748,
											"end": 3754,
											"name": "MUL"
										},
										{
											"begin": 3748,
											"end": 3754,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3748,
											"end": 3754,
											"name": "ADD"
										},
										{
											"begin": 3748,
											"end": 3754,
											"name": "ADD"
										},
										{
											"begin": 3748,
											"end": 3754,
											"name": "MLOAD"
										},
										{
											"begin": 3756,
											"end": 3757,
											"name": "DUP10"
										},
										{
											"begin": 3758,
											"end": 3761,
											"name": "DUP7"
										},
										{
											"begin": 3756,
											"end": 3762,
											"name": "DUP2"
										},
										{
											"begin": 3756,
											"end": 3762,
											"name": "MLOAD"
										},
										{
											"begin": 3756,
											"end": 3762,
											"name": "DUP2"
										},
										{
											"begin": 3756,
											"end": 3762,
											"name": "LT"
										},
										{
											"begin": 3756,
											"end": 3762,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 3756,
											"end": 3762,
											"name": "JUMPI"
										},
										{
											"begin": 3756,
											"end": 3762,
											"name": "INVALID"
										},
										{
											"begin": 3756,
											"end": 3762,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 3756,
											"end": 3762,
											"name": "JUMPDEST"
										},
										{
											"begin": 3756,
											"end": 3762,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3756,
											"end": 3762,
											"name": "MUL"
										},
										{
											"begin": 3756,
											"end": 3762,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3756,
											"end": 3762,
											"name": "ADD"
										},
										{
											"begin": 3756,
											"end": 3762,
											"name": "ADD"
										},
										{
											"begin": 3756,
											"end": 3762,
											"name": "MLOAD"
										},
										{
											"begin": 3718,
											"end": 3763,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3718,
											"end": 3763,
											"name": "MLOAD"
										},
										{
											"begin": 3718,
											"end": 3763,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3718,
											"end": 3763,
											"name": "DUP2"
										},
										{
											"begin": 3718,
											"end": 3763,
											"name": "MSTORE"
										},
										{
											"begin": 3718,
											"end": 3763,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3718,
											"end": 3763,
											"name": "ADD"
										},
										{
											"begin": 3718,
											"end": 3763,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3718,
											"end": 3763,
											"name": "MSTORE"
										},
										{
											"begin": 3718,
											"end": 3763,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3718,
											"end": 3763,
											"name": "MLOAD"
										},
										{
											"begin": 3718,
											"end": 3763,
											"name": "DUP1"
										},
										{
											"begin": 3718,
											"end": 3763,
											"name": "DUP6"
										},
										{
											"begin": 3718,
											"end": 3763,
											"name": "DUP2"
										},
										{
											"begin": 3718,
											"end": 3763,
											"name": "MSTORE"
										},
										{
											"begin": 3718,
											"end": 3763,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3718,
											"end": 3763,
											"name": "ADD"
										},
										{
											"begin": 3718,
											"end": 3763,
											"name": "DUP5"
										},
										{
											"begin": 3718,
											"end": 3763,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3718,
											"end": 3763,
											"name": "AND"
										},
										{
											"begin": 3718,
											"end": 3763,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3718,
											"end": 3763,
											"name": "AND"
										},
										{
											"begin": 3718,
											"end": 3763,
											"name": "DUP2"
										},
										{
											"begin": 3718,
											"end": 3763,
											"name": "MSTORE"
										},
										{
											"begin": 3718,
											"end": 3763,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3718,
											"end": 3763,
											"name": "ADD"
										},
										{
											"begin": 3718,
											"end": 3763,
											"name": "DUP4"
										},
										{
											"begin": 3718,
											"end": 3763,
											"name": "DUP2"
										},
										{
											"begin": 3718,
											"end": 3763,
											"name": "MSTORE"
										},
										{
											"begin": 3718,
											"end": 3763,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3718,
											"end": 3763,
											"name": "ADD"
										},
										{
											"begin": 3718,
											"end": 3763,
											"name": "DUP3"
										},
										{
											"begin": 3718,
											"end": 3763,
											"name": "DUP2"
										},
										{
											"begin": 3718,
											"end": 3763,
											"name": "MSTORE"
										},
										{
											"begin": 3718,
											"end": 3763,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3718,
											"end": 3763,
											"name": "ADD"
										},
										{
											"begin": 3718,
											"end": 3763,
											"name": "SWAP5"
										},
										{
											"begin": 3718,
											"end": 3763,
											"name": "POP"
										},
										{
											"begin": 3718,
											"end": 3763,
											"name": "POP"
										},
										{
											"begin": 3718,
											"end": 3763,
											"name": "POP"
										},
										{
											"begin": 3718,
											"end": 3763,
											"name": "POP"
										},
										{
											"begin": 3718,
											"end": 3763,
											"name": "POP"
										},
										{
											"begin": 3718,
											"end": 3763,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3718,
											"end": 3763,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3718,
											"end": 3763,
											"name": "MLOAD"
										},
										{
											"begin": 3718,
											"end": 3763,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3718,
											"end": 3763,
											"name": "DUP2"
										},
										{
											"begin": 3718,
											"end": 3763,
											"name": "SUB"
										},
										{
											"begin": 3718,
											"end": 3763,
											"name": "SWAP1"
										},
										{
											"begin": 3718,
											"end": 3763,
											"name": "DUP1"
										},
										{
											"begin": 3718,
											"end": 3763,
											"name": "DUP5"
										},
										{
											"begin": 3718,
											"end": 3763,
											"name": "SUB"
										},
										{
											"begin": 3718,
											"end": 3763,
											"name": "SWAP1"
										},
										{
											"begin": 3718,
											"end": 3763,
											"name": "DUP6"
										},
										{
											"begin": 3718,
											"end": 3763,
											"name": "GAS"
										},
										{
											"begin": 3718,
											"end": 3763,
											"name": "STATICCALL"
										},
										{
											"begin": 3718,
											"end": 3763,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3718,
											"end": 3763,
											"name": "POP"
										},
										{
											"begin": 3718,
											"end": 3763,
											"name": "POP"
										},
										{
											"begin": 3718,
											"end": 3763,
											"name": "POP"
										},
										{
											"begin": 3718,
											"end": 3763,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3718,
											"end": 3763,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3718,
											"end": 3763,
											"name": "MLOAD"
										},
										{
											"begin": 3718,
											"end": 3763,
											"name": "SUB"
										},
										{
											"begin": 3718,
											"end": 3763,
											"name": "MLOAD"
										},
										{
											"begin": 3701,
											"end": 3763,
											"name": "SWAP1"
										},
										{
											"begin": 3701,
											"end": 3763,
											"name": "POP"
										},
										{
											"begin": 3785,
											"end": 3791,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3785,
											"end": 3799,
											"name": "DUP1"
										},
										{
											"begin": 3792,
											"end": 3798,
											"name": "DUP3"
										},
										{
											"begin": 3785,
											"end": 3799,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3785,
											"end": 3799,
											"name": "AND"
										},
										{
											"begin": 3785,
											"end": 3799,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3785,
											"end": 3799,
											"name": "AND"
										},
										{
											"begin": 3785,
											"end": 3799,
											"name": "DUP2"
										},
										{
											"begin": 3785,
											"end": 3799,
											"name": "MSTORE"
										},
										{
											"begin": 3785,
											"end": 3799,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3785,
											"end": 3799,
											"name": "ADD"
										},
										{
											"begin": 3785,
											"end": 3799,
											"name": "SWAP1"
										},
										{
											"begin": 3785,
											"end": 3799,
											"name": "DUP2"
										},
										{
											"begin": 3785,
											"end": 3799,
											"name": "MSTORE"
										},
										{
											"begin": 3785,
											"end": 3799,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3785,
											"end": 3799,
											"name": "ADD"
										},
										{
											"begin": 3785,
											"end": 3799,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3785,
											"end": 3799,
											"name": "KECCAK256"
										},
										{
											"begin": 3785,
											"end": 3799,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3785,
											"end": 3799,
											"name": "SWAP1"
										},
										{
											"begin": 3785,
											"end": 3799,
											"name": "SLOAD"
										},
										{
											"begin": 3785,
											"end": 3799,
											"name": "SWAP1"
										},
										{
											"begin": 3785,
											"end": 3799,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3785,
											"end": 3799,
											"name": "EXP"
										},
										{
											"begin": 3785,
											"end": 3799,
											"name": "SWAP1"
										},
										{
											"begin": 3785,
											"end": 3799,
											"name": "DIV"
										},
										{
											"begin": 3785,
											"end": 3799,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3785,
											"end": 3799,
											"name": "AND"
										},
										{
											"begin": 3777,
											"end": 3800,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 3777,
											"end": 3800,
											"name": "JUMPI"
										},
										{
											"begin": 3777,
											"end": 3800,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3777,
											"end": 3800,
											"name": "DUP1"
										},
										{
											"begin": 3777,
											"end": 3800,
											"name": "REVERT"
										},
										{
											"begin": 3777,
											"end": 3800,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 3777,
											"end": 3800,
											"name": "JUMPDEST"
										},
										{
											"begin": 3848,
											"end": 3857,
											"name": "DUP3"
										},
										{
											"begin": 3840,
											"end": 3858,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3840,
											"end": 3858,
											"name": "AND"
										},
										{
											"begin": 3830,
											"end": 3836,
											"name": "DUP2"
										},
										{
											"begin": 3822,
											"end": 3837,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3822,
											"end": 3837,
											"name": "AND"
										},
										{
											"begin": 3822,
											"end": 3858,
											"name": "GT"
										},
										{
											"begin": 3814,
											"end": 3859,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 3814,
											"end": 3859,
											"name": "JUMPI"
										},
										{
											"begin": 3814,
											"end": 3859,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3814,
											"end": 3859,
											"name": "DUP1"
										},
										{
											"begin": 3814,
											"end": 3859,
											"name": "REVERT"
										},
										{
											"begin": 3814,
											"end": 3859,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 3814,
											"end": 3859,
											"name": "JUMPDEST"
										},
										{
											"begin": 3885,
											"end": 3891,
											"name": "DUP1"
										},
										{
											"begin": 3873,
											"end": 3891,
											"name": "SWAP3"
										},
										{
											"begin": 3873,
											"end": 3891,
											"name": "POP"
										},
										{
											"begin": 3928,
											"end": 3941,
											"name": "DUP9"
										},
										{
											"begin": 3910,
											"end": 3973,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3910,
											"end": 3973,
											"name": "AND"
										},
										{
											"begin": 3910,
											"end": 3973,
											"name": "PUSH",
											"value": "CE51FFA16246BCAF0899F6504F473CD0114F430F566CEF71AB7E03D3DDE42A41"
										},
										{
											"begin": 3943,
											"end": 3948,
											"name": "DUP12"
										},
										{
											"begin": 3950,
											"end": 3951,
											"name": "DUP11"
										},
										{
											"begin": 3952,
											"end": 3955,
											"name": "DUP6"
										},
										{
											"begin": 3950,
											"end": 3956,
											"name": "DUP2"
										},
										{
											"begin": 3950,
											"end": 3956,
											"name": "MLOAD"
										},
										{
											"begin": 3950,
											"end": 3956,
											"name": "DUP2"
										},
										{
											"begin": 3950,
											"end": 3956,
											"name": "LT"
										},
										{
											"begin": 3950,
											"end": 3956,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 3950,
											"end": 3956,
											"name": "JUMPI"
										},
										{
											"begin": 3950,
											"end": 3956,
											"name": "INVALID"
										},
										{
											"begin": 3950,
											"end": 3956,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 3950,
											"end": 3956,
											"name": "JUMPDEST"
										},
										{
											"begin": 3950,
											"end": 3956,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3950,
											"end": 3956,
											"name": "MUL"
										},
										{
											"begin": 3950,
											"end": 3956,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3950,
											"end": 3956,
											"name": "ADD"
										},
										{
											"begin": 3950,
											"end": 3956,
											"name": "ADD"
										},
										{
											"begin": 3950,
											"end": 3956,
											"name": "MLOAD"
										},
										{
											"begin": 3958,
											"end": 3959,
											"name": "DUP11"
										},
										{
											"begin": 3960,
											"end": 3963,
											"name": "DUP7"
										},
										{
											"begin": 3958,
											"end": 3964,
											"name": "DUP2"
										},
										{
											"begin": 3958,
											"end": 3964,
											"name": "MLOAD"
										},
										{
											"begin": 3958,
											"end": 3964,
											"name": "DUP2"
										},
										{
											"begin": 3958,
											"end": 3964,
											"name": "LT"
										},
										{
											"begin": 3958,
											"end": 3964,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 3958,
											"end": 3964,
											"name": "JUMPI"
										},
										{
											"begin": 3958,
											"end": 3964,
											"name": "INVALID"
										},
										{
											"begin": 3958,
											"end": 3964,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 3958,
											"end": 3964,
											"name": "JUMPDEST"
										},
										{
											"begin": 3958,
											"end": 3964,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3958,
											"end": 3964,
											"name": "MUL"
										},
										{
											"begin": 3958,
											"end": 3964,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3958,
											"end": 3964,
											"name": "ADD"
										},
										{
											"begin": 3958,
											"end": 3964,
											"name": "ADD"
										},
										{
											"begin": 3958,
											"end": 3964,
											"name": "MLOAD"
										},
										{
											"begin": 3966,
											"end": 3967,
											"name": "DUP11"
										},
										{
											"begin": 3968,
											"end": 3971,
											"name": "DUP8"
										},
										{
											"begin": 3966,
											"end": 3972,
											"name": "DUP2"
										},
										{
											"begin": 3966,
											"end": 3972,
											"name": "MLOAD"
										},
										{
											"begin": 3966,
											"end": 3972,
											"name": "DUP2"
										},
										{
											"begin": 3966,
											"end": 3972,
											"name": "LT"
										},
										{
											"begin": 3966,
											"end": 3972,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 3966,
											"end": 3972,
											"name": "JUMPI"
										},
										{
											"begin": 3966,
											"end": 3972,
											"name": "INVALID"
										},
										{
											"begin": 3966,
											"end": 3972,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 3966,
											"end": 3972,
											"name": "JUMPDEST"
										},
										{
											"begin": 3966,
											"end": 3972,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3966,
											"end": 3972,
											"name": "MUL"
										},
										{
											"begin": 3966,
											"end": 3972,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3966,
											"end": 3972,
											"name": "ADD"
										},
										{
											"begin": 3966,
											"end": 3972,
											"name": "ADD"
										},
										{
											"begin": 3966,
											"end": 3972,
											"name": "MLOAD"
										},
										{
											"begin": 3910,
											"end": 3973,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3910,
											"end": 3973,
											"name": "MLOAD"
										},
										{
											"begin": 3910,
											"end": 3973,
											"name": "DUP1"
										},
										{
											"begin": 3910,
											"end": 3973,
											"name": "DUP6"
										},
										{
											"begin": 3910,
											"end": 3973,
											"name": "DUP2"
										},
										{
											"begin": 3910,
											"end": 3973,
											"name": "MSTORE"
										},
										{
											"begin": 3910,
											"end": 3973,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3910,
											"end": 3973,
											"name": "ADD"
										},
										{
											"begin": 3910,
											"end": 3973,
											"name": "DUP5"
										},
										{
											"begin": 3910,
											"end": 3973,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3910,
											"end": 3973,
											"name": "AND"
										},
										{
											"begin": 3910,
											"end": 3973,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3910,
											"end": 3973,
											"name": "AND"
										},
										{
											"begin": 3910,
											"end": 3973,
											"name": "DUP2"
										},
										{
											"begin": 3910,
											"end": 3973,
											"name": "MSTORE"
										},
										{
											"begin": 3910,
											"end": 3973,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3910,
											"end": 3973,
											"name": "ADD"
										},
										{
											"begin": 3910,
											"end": 3973,
											"name": "DUP4"
										},
										{
											"begin": 3910,
											"end": 3973,
											"name": "DUP2"
										},
										{
											"begin": 3910,
											"end": 3973,
											"name": "MSTORE"
										},
										{
											"begin": 3910,
											"end": 3973,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3910,
											"end": 3973,
											"name": "ADD"
										},
										{
											"begin": 3910,
											"end": 3973,
											"name": "DUP3"
										},
										{
											"begin": 3910,
											"end": 3973,
											"name": "DUP2"
										},
										{
											"begin": 3910,
											"end": 3973,
											"name": "MSTORE"
										},
										{
											"begin": 3910,
											"end": 3973,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3910,
											"end": 3973,
											"name": "ADD"
										},
										{
											"begin": 3910,
											"end": 3973,
											"name": "SWAP5"
										},
										{
											"begin": 3910,
											"end": 3973,
											"name": "POP"
										},
										{
											"begin": 3910,
											"end": 3973,
											"name": "POP"
										},
										{
											"begin": 3910,
											"end": 3973,
											"name": "POP"
										},
										{
											"begin": 3910,
											"end": 3973,
											"name": "POP"
										},
										{
											"begin": 3910,
											"end": 3973,
											"name": "POP"
										},
										{
											"begin": 3910,
											"end": 3973,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3910,
											"end": 3973,
											"name": "MLOAD"
										},
										{
											"begin": 3910,
											"end": 3973,
											"name": "DUP1"
										},
										{
											"begin": 3910,
											"end": 3973,
											"name": "SWAP2"
										},
										{
											"begin": 3910,
											"end": 3973,
											"name": "SUB"
										},
										{
											"begin": 3910,
											"end": 3973,
											"name": "SWAP1"
										},
										{
											"begin": 3910,
											"end": 3973,
											"name": "LOG2"
										},
										{
											"begin": 4073,
											"end": 4082,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 4073,
											"end": 4082,
											"name": "SLOAD"
										},
										{
											"begin": 4068,
											"end": 4069,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4064,
											"end": 4067,
											"name": "DUP4"
										},
										{
											"begin": 4064,
											"end": 4069,
											"name": "ADD"
										},
										{
											"begin": 4064,
											"end": 4082,
											"name": "LT"
										},
										{
											"begin": 4060,
											"end": 4242,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 4060,
											"end": 4242,
											"name": "JUMPI"
										},
										{
											"begin": 4108,
											"end": 4113,
											"name": "DUP10"
										},
										{
											"begin": 4101,
											"end": 4105,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4101,
											"end": 4113,
											"name": "DUP2"
										},
										{
											"begin": 4101,
											"end": 4113,
											"name": "SWAP1"
										},
										{
											"begin": 4101,
											"end": 4113,
											"name": "SSTORE"
										},
										{
											"begin": 4101,
											"end": 4113,
											"name": "POP"
										},
										{
											"begin": 4140,
											"end": 4152,
											"name": "NUMBER"
										},
										{
											"begin": 4131,
											"end": 4137,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 4131,
											"end": 4152,
											"name": "DUP2"
										},
										{
											"begin": 4131,
											"end": 4152,
											"name": "SWAP1"
										},
										{
											"begin": 4131,
											"end": 4152,
											"name": "SSTORE"
										},
										{
											"begin": 4131,
											"end": 4152,
											"name": "POP"
										},
										{
											"begin": 4185,
											"end": 4198,
											"name": "DUP9"
										},
										{
											"begin": 4170,
											"end": 4182,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4170,
											"end": 4182,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4170,
											"end": 4198,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4170,
											"end": 4198,
											"name": "EXP"
										},
										{
											"begin": 4170,
											"end": 4198,
											"name": "DUP2"
										},
										{
											"begin": 4170,
											"end": 4198,
											"name": "SLOAD"
										},
										{
											"begin": 4170,
											"end": 4198,
											"name": "DUP2"
										},
										{
											"begin": 4170,
											"end": 4198,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4170,
											"end": 4198,
											"name": "MUL"
										},
										{
											"begin": 4170,
											"end": 4198,
											"name": "NOT"
										},
										{
											"begin": 4170,
											"end": 4198,
											"name": "AND"
										},
										{
											"begin": 4170,
											"end": 4198,
											"name": "SWAP1"
										},
										{
											"begin": 4170,
											"end": 4198,
											"name": "DUP4"
										},
										{
											"begin": 4170,
											"end": 4198,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4170,
											"end": 4198,
											"name": "AND"
										},
										{
											"begin": 4170,
											"end": 4198,
											"name": "MUL"
										},
										{
											"begin": 4170,
											"end": 4198,
											"name": "OR"
										},
										{
											"begin": 4170,
											"end": 4198,
											"name": "SWAP1"
										},
										{
											"begin": 4170,
											"end": 4198,
											"name": "SSTORE"
										},
										{
											"begin": 4170,
											"end": 4198,
											"name": "POP"
										},
										{
											"begin": 4223,
											"end": 4227,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4216,
											"end": 4227,
											"name": "SWAP5"
										},
										{
											"begin": 4216,
											"end": 4227,
											"name": "POP"
										},
										{
											"begin": 4216,
											"end": 4227,
											"name": "POP"
										},
										{
											"begin": 4216,
											"end": 4227,
											"name": "POP"
										},
										{
											"begin": 4216,
											"end": 4227,
											"name": "POP"
										},
										{
											"begin": 4216,
											"end": 4227,
											"name": "POP"
										},
										{
											"begin": 4216,
											"end": 4227,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 4216,
											"end": 4227,
											"name": "JUMP"
										},
										{
											"begin": 4060,
											"end": 4242,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 4060,
											"end": 4242,
											"name": "JUMPDEST"
										},
										{
											"begin": 3646,
											"end": 4252,
											"name": "POP"
										},
										{
											"begin": 3681,
											"end": 3686,
											"name": "DUP1"
										},
										{
											"begin": 3681,
											"end": 3686,
											"name": "DUP1"
										},
										{
											"begin": 3681,
											"end": 3686,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3681,
											"end": 3686,
											"name": "ADD"
										},
										{
											"begin": 3681,
											"end": 3686,
											"name": "SWAP2"
										},
										{
											"begin": 3681,
											"end": 3686,
											"name": "POP"
										},
										{
											"begin": 3681,
											"end": 3686,
											"name": "POP"
										},
										{
											"begin": 3646,
											"end": 4252,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 3646,
											"end": 4252,
											"name": "JUMP"
										},
										{
											"begin": 3646,
											"end": 4252,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 3646,
											"end": 4252,
											"name": "JUMPDEST"
										},
										{
											"begin": 3646,
											"end": 4252,
											"name": "POP"
										},
										{
											"begin": 4329,
											"end": 4337,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4329,
											"end": 4337,
											"name": "DUP1"
										},
										{
											"begin": 4329,
											"end": 4337,
											"name": "REVERT"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "JUMPDEST"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP8"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "SWAP7"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "POP"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "POP"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "POP"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "POP"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "POP"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "POP"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "POP"
										},
										{
											"begin": 1605,
											"end": 4344,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"GetAllAdmin()": "45848dfc",
							"GetLatestCheckpoint()": "4d6a304c",
							"SetCheckpoint(uint256,bytes32,bytes32,uint64,uint8[],bytes32[],bytes32[])": "d459fc46"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.0+commit.26b70077\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_adminlist\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_sectionSize\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_processConfirms\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_threshold\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"index\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"checkpointHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"NewCheckpointVote\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"GetAllAdmin\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GetLatestCheckpoint\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_recentNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_recentHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"_sectionIndex\",\"type\":\"uint64\"},{\"internalType\":\"uint8[]\",\"name\":\"v\",\"type\":\"uint8[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"r\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"s\",\"type\":\"bytes32[]\"}],\"name\":\"SetCheckpoint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Gary Rong<garyrong@ethereum.org>, Martin Swende <martin.swende@ethereum.org>\",\"details\":\"Implementation of the blockchain checkpoint registrar.\",\"methods\":{\"GetAllAdmin()\":{\"details\":\"Get all admin addresses\",\"returns\":{\"_0\":\"address list\"}},\"GetLatestCheckpoint()\":{\"details\":\"Get latest stable checkpoint information.\",\"returns\":{\"_0\":\"section index\",\"_1\":\"checkpoint hash\",\"_2\":\"block height associated with checkpoint\"}}},\"title\":\"CheckpointOracle\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/checkpointoracle/contract/oracle.sol\":\"CheckpointOracle\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/checkpointoracle/contract/oracle.sol\":{\"keccak256\":\"0x738c2be3bcb2f7f06946ef3c467852e34a4e65120d2782d89d3fc9d88e6cb2eb\",\"urls\":[\"bzz-raw://f2798b17afac3e0d77555bf8ecae9c1c462d2e5317799dc0a83c7ef23de6a930\",\"dweb:/ipfs/QmYqFrDitrtbGuxu2a8BtPrCYp7gKQvbL9qwk9DUczh6Ct\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 342,
								"contract": "contracts/checkpointoracle/contract/oracle.sol:CheckpointOracle",
								"label": "admins",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 345,
								"contract": "contracts/checkpointoracle/contract/oracle.sol:CheckpointOracle",
								"label": "adminList",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 347,
								"contract": "contracts/checkpointoracle/contract/oracle.sol:CheckpointOracle",
								"label": "sectionIndex",
								"offset": 0,
								"slot": "2",
								"type": "t_uint64"
							},
							{
								"astId": 349,
								"contract": "contracts/checkpointoracle/contract/oracle.sol:CheckpointOracle",
								"label": "height",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 351,
								"contract": "contracts/checkpointoracle/contract/oracle.sol:CheckpointOracle",
								"label": "hash",
								"offset": 0,
								"slot": "4",
								"type": "t_bytes32"
							},
							{
								"astId": 353,
								"contract": "contracts/checkpointoracle/contract/oracle.sol:CheckpointOracle",
								"label": "sectionSize",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 355,
								"contract": "contracts/checkpointoracle/contract/oracle.sol:CheckpointOracle",
								"label": "processConfirms",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 357,
								"contract": "contracts/checkpointoracle/contract/oracle.sol:CheckpointOracle",
								"label": "threshold",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint64": {
								"encoding": "inplace",
								"label": "uint64",
								"numberOfBytes": "8"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/checkpointoracle/contract/oracle.sol": {
				"ast": {
					"absolutePath": "contracts/checkpointoracle/contract/oracle.sol",
					"exportedSymbols": {
						"CheckpointOracle": [
							358
						]
					},
					"id": 359,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": "@title CheckpointOracle\n@author Gary Rong<garyrong@ethereum.org>, Martin Swende <martin.swende@ethereum.org>\n@dev Implementation of the blockchain checkpoint registrar.",
							"fullyImplemented": true,
							"id": 358,
							"linearizedBaseContracts": [
								358
							],
							"name": "CheckpointOracle",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": null,
									"id": 13,
									"name": "NewCheckpointVote",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"indexed": true,
												"name": "index",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 13,
												"src": "381:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 2,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "381:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"indexed": false,
												"name": "checkpointHash",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 13,
												"src": "403:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 4,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": false,
												"name": "v",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 13,
												"src": "427:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 6,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "427:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"name": "r",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 13,
												"src": "436:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 8,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "436:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": false,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 13,
												"src": "447:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 10,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "380:77:0"
									},
									"src": "357:101:0"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "610:269:0",
										"statements": [
											{
												"body": {
													"id": 52,
													"nodeType": "Block",
													"src": "665:96:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 42,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 36,
																		"name": "admins",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 342,
																		"src": "679:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 40,
																	"indexExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 37,
																			"name": "_adminlist",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 16,
																			"src": "686:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 39,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 38,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 26,
																			"src": "697:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "686:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "679:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "74727565",
																	"id": 41,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "703:4:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "679:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 43,
															"nodeType": "ExpressionStatement",
															"src": "679:28:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 47,
																			"name": "_adminlist",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 16,
																			"src": "736:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 49,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 48,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 26,
																			"src": "747:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "736:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 44,
																		"name": "adminList",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 345,
																		"src": "721:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 46,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "721:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 50,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "721:29:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 51,
															"nodeType": "ExpressionStatement",
															"src": "721:29:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 29,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "637:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 30,
															"name": "_adminlist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "641:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 31,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "641:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "637:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 53,
												"initializationExpression": {
													"assignments": [
														26
													],
													"declarations": [
														{
															"constant": false,
															"id": 26,
															"name": "i",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 53,
															"src": "625:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 25,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "625:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 28,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 27,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "634:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "625:10:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "660:3:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 33,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "660:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 35,
													"nodeType": "ExpressionStatement",
													"src": "660:3:0"
												},
												"nodeType": "ForStatement",
												"src": "620:141:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 56,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 54,
														"name": "sectionSize",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "770:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 55,
														"name": "_sectionSize",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "784:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "770:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 57,
												"nodeType": "ExpressionStatement",
												"src": "770:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 58,
														"name": "processConfirms",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 355,
														"src": "806:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 59,
														"name": "_processConfirms",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "824:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "806:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 61,
												"nodeType": "ExpressionStatement",
												"src": "806:34:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 64,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 62,
														"name": "threshold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 357,
														"src": "850:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 63,
														"name": "_threshold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "862:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "850:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 65,
												"nodeType": "ExpressionStatement",
												"src": "850:22:0"
											}
										]
									},
									"documentation": null,
									"id": 67,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"name": "_adminlist",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 67,
												"src": "515:27:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 14,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "515:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 15,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "515:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"name": "_sectionSize",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 67,
												"src": "544:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "544:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 20,
												"name": "_processConfirms",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 67,
												"src": "563:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 19,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "563:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"name": "_threshold",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 67,
												"src": "586:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "586:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "514:88:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "610:0:0"
									},
									"scope": 358,
									"src": "503:376:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 81,
										"nodeType": "Block",
										"src": "1156:52:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"id": 76,
															"name": "sectionIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 347,
															"src": "1174:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														{
															"argumentTypes": null,
															"id": 77,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "1188:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 78,
															"name": "height",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "1194:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 79,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1173:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint64_$_t_bytes32_$_t_uint256_$",
														"typeString": "tuple(uint64,bytes32,uint256)"
													}
												},
												"functionReturnParameters": 75,
												"id": 80,
												"nodeType": "Return",
												"src": "1166:35:0"
											}
										]
									},
									"documentation": "@dev Get latest stable checkpoint information.\n@return section index\n@return checkpoint hash\n@return block height associated with checkpoint",
									"functionSelector": "4d6a304c",
									"id": 82,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "GetLatestCheckpoint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1098:2:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 82,
												"src": "1133:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 69,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1133:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 82,
												"src": "1141:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 71,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1141:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 82,
												"src": "1150:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1150:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1132:23:0"
									},
									"scope": 358,
									"src": "1070:138:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 295,
										"nodeType": "Block",
										"src": "1863:2481:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 105,
																"name": "admins",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 342,
																"src": "1925:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 108,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 106,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 373,
																	"src": "1932:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 107,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1932:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1925:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 104,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															376,
															377
														],
														"referencedDeclaration": 376,
														"src": "1917:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1917:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 110,
												"nodeType": "ExpressionStatement",
												"src": "1917:27:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 113,
																		"name": "_recentNumber",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 84,
																		"src": "2092:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 112,
																	"name": "blockhash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 364,
																	"src": "2082:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
																		"typeString": "function (uint256) view returns (bytes32)"
																	}
																},
																"id": 114,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2082:24:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 115,
																"name": "_recentHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 86,
																"src": "2110:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "2082:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 111,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															376,
															377
														],
														"referencedDeclaration": 376,
														"src": "2074:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2074:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 118,
												"nodeType": "ExpressionStatement",
												"src": "2074:48:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 120,
																	"name": "v",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 93,
																	"src": "2194:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
																		"typeString": "uint8[] memory"
																	}
																},
																"id": 121,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2194:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 122,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 96,
																	"src": "2206:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																		"typeString": "bytes32[] memory"
																	}
																},
																"id": 123,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2206:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2194:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 119,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															376,
															377
														],
														"referencedDeclaration": 376,
														"src": "2186:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2186:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 126,
												"nodeType": "ExpressionStatement",
												"src": "2186:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 128,
																	"name": "v",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 93,
																	"src": "2233:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
																		"typeString": "uint8[] memory"
																	}
																},
																"id": 129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2233:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 130,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 99,
																	"src": "2245:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																		"typeString": "bytes32[] memory"
																	}
																},
																"id": 131,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2245:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2233:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 127,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															376,
															377
														],
														"referencedDeclaration": 376,
														"src": "2225:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2225:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "2225:29:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 135,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "2312:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 136,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "2312:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 144,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		},
																		"id": 139,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 137,
																			"name": "_sectionIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 90,
																			"src": "2328:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint64",
																				"typeString": "uint64"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "31",
																			"id": 138,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2342:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "2328:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"id": 140,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2327:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"argumentTypes": null,
																"id": 141,
																"name": "sectionSize",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 353,
																"src": "2345:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2327:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"argumentTypes": null,
															"id": 143,
															"name": "processConfirms",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "2357:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2327:45:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2312:60:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 149,
												"nodeType": "IfStatement",
												"src": "2308:103:0",
												"trueBody": {
													"id": 148,
													"nodeType": "Block",
													"src": "2374:37:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 146,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2395:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 103,
															"id": 147,
															"nodeType": "Return",
															"src": "2388:12:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 150,
														"name": "_sectionIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 90,
														"src": "2465:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 151,
														"name": "sectionIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "2481:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "2465:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 156,
												"nodeType": "IfStatement",
												"src": "2461:71:0",
												"trueBody": {
													"id": 155,
													"nodeType": "Block",
													"src": "2495:37:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 153,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2516:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 103,
															"id": 154,
															"nodeType": "Return",
															"src": "2509:12:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 159,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 157,
															"name": "_sectionIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2588:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"argumentTypes": null,
															"id": 158,
															"name": "sectionIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 347,
															"src": "2605:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "2588:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 166,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	},
																	"id": 162,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 160,
																		"name": "_sectionIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 90,
																		"src": "2622:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 161,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2639:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "2622:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 165,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 163,
																		"name": "height",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 349,
																		"src": "2644:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 164,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2654:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "2644:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "2622:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 167,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2621:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2588:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 172,
												"nodeType": "IfStatement",
												"src": "2584:111:0",
												"trueBody": {
													"id": 171,
													"nodeType": "Block",
													"src": "2658:37:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 169,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2679:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 103,
															"id": 170,
															"nodeType": "Return",
															"src": "2672:12:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 173,
														"name": "_hash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 88,
														"src": "2753:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "",
														"id": 174,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2762:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"src": "2753:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 179,
												"nodeType": "IfStatement",
												"src": "2749:53:0",
												"trueBody": {
													"id": 178,
													"nodeType": "Block",
													"src": "2765:37:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 176,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2786:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 103,
															"id": 177,
															"nodeType": "Return",
															"src": "2779:12:0"
														}
													]
												}
											},
											{
												"assignments": [
													181
												],
												"declarations": [
													{
														"constant": false,
														"id": 181,
														"name": "signedHash",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 295,
														"src": "3294:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 180,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3294:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 198,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30783139",
																			"id": 187,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3347:4:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_25_by_1",
																				"typeString": "int_const 25"
																			},
																			"value": "0x19"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_25_by_1",
																				"typeString": "int_const 25"
																			}
																		],
																		"id": 186,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3342:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 185,
																			"name": "byte",
																			"nodeType": "ElementaryTypeName",
																			"src": "3342:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 188,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3342:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 191,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3359:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 190,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3354:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 189,
																			"name": "byte",
																			"nodeType": "ElementaryTypeName",
																			"src": "3354:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 192,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3354:7:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 193,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 387,
																	"src": "3363:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_CheckpointOracle_$358",
																		"typeString": "contract CheckpointOracle"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 194,
																	"name": "_sectionIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 90,
																	"src": "3369:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 195,
																	"name": "_hash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 88,
																	"src": "3384:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	},
																	{
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	},
																	{
																		"typeIdentifier": "t_contract$_CheckpointOracle_$358",
																		"typeString": "contract CheckpointOracle"
																	},
																	{
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 183,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 360,
																	"src": "3325:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 184,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3325:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3325:65:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 182,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 367,
														"src": "3315:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3315:76:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3294:97:0"
											},
											{
												"assignments": [
													200
												],
												"declarations": [
													{
														"constant": false,
														"id": 200,
														"name": "lastVoter",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 295,
														"src": "3402:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 199,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3402:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 205,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 203,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3430:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 202,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3422:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 201,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3422:7:0",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 204,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3422:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3402:30:0"
											},
											{
												"body": {
													"id": 290,
													"nodeType": "Block",
													"src": "3687:565:0",
													"statements": [
														{
															"assignments": [
																218
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 218,
																	"name": "signer",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 290,
																	"src": "3701:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 217,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3701:7:0",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 231,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 220,
																		"name": "signedHash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 181,
																		"src": "3728:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 221,
																			"name": "v",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 93,
																			"src": "3740:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
																				"typeString": "uint8[] memory"
																			}
																		},
																		"id": 223,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 222,
																			"name": "idx",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 207,
																			"src": "3742:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3740:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 224,
																			"name": "r",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 96,
																			"src": "3748:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																				"typeString": "bytes32[] memory"
																			}
																		},
																		"id": 226,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 225,
																			"name": "idx",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 207,
																			"src": "3750:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3748:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 227,
																			"name": "s",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 99,
																			"src": "3756:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																				"typeString": "bytes32[] memory"
																			}
																		},
																		"id": 229,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 228,
																			"name": "idx",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 207,
																			"src": "3758:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3756:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 219,
																	"name": "ecrecover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 365,
																	"src": "3718:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
																		"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
																	}
																},
																"id": 230,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3718:45:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3701:62:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 233,
																			"name": "admins",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 342,
																			"src": "3785:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																				"typeString": "mapping(address => bool)"
																			}
																		},
																		"id": 235,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 234,
																			"name": "signer",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 218,
																			"src": "3792:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3785:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 232,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		376,
																		377
																	],
																	"referencedDeclaration": 376,
																	"src": "3777:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 236,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3777:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 237,
															"nodeType": "ExpressionStatement",
															"src": "3777:23:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 247,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 241,
																					"name": "signer",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 218,
																					"src": "3830:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 240,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3822:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 239,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "3822:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 242,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3822:15:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 245,
																					"name": "lastVoter",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 200,
																					"src": "3848:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 244,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3840:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 243,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "3840:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 246,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3840:18:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3822:36:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 238,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		376,
																		377
																	],
																	"referencedDeclaration": 376,
																	"src": "3814:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3814:45:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 249,
															"nodeType": "ExpressionStatement",
															"src": "3814:45:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 252,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 250,
																	"name": "lastVoter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 200,
																	"src": "3873:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 251,
																	"name": "signer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 218,
																	"src": "3885:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3873:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 253,
															"nodeType": "ExpressionStatement",
															"src": "3873:18:0"
														},
														{
															"eventCall": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 255,
																		"name": "_sectionIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 90,
																		"src": "3928:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 256,
																		"name": "_hash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 88,
																		"src": "3943:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 257,
																			"name": "v",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 93,
																			"src": "3950:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
																				"typeString": "uint8[] memory"
																			}
																		},
																		"id": 259,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 258,
																			"name": "idx",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 207,
																			"src": "3952:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3950:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 260,
																			"name": "r",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 96,
																			"src": "3958:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																				"typeString": "bytes32[] memory"
																			}
																		},
																		"id": 262,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 261,
																			"name": "idx",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 207,
																			"src": "3960:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3958:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 263,
																			"name": "s",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 99,
																			"src": "3966:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																				"typeString": "bytes32[] memory"
																			}
																		},
																		"id": 265,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 264,
																			"name": "idx",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 207,
																			"src": "3968:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3966:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 254,
																	"name": "NewCheckpointVote",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "3910:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
																		"typeString": "function (uint64,bytes32,uint8,bytes32,bytes32)"
																	}
																},
																"id": 266,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3910:63:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 267,
															"nodeType": "EmitStatement",
															"src": "3905:68:0"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 272,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 270,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 268,
																		"name": "idx",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 207,
																		"src": "4064:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 269,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4068:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "4064:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 271,
																	"name": "threshold",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 357,
																	"src": "4073:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4064:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 289,
															"nodeType": "IfStatement",
															"src": "4060:182:0",
															"trueBody": {
																"id": 288,
																"nodeType": "Block",
																"src": "4083:159:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 275,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 273,
																				"name": "hash",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 351,
																				"src": "4101:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"id": 274,
																				"name": "_hash",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 88,
																				"src": "4108:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "4101:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"id": 276,
																		"nodeType": "ExpressionStatement",
																		"src": "4101:12:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 280,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 277,
																				"name": "height",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 349,
																				"src": "4131:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 278,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 363,
																					"src": "4140:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 279,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "number",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "4140:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4131:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 281,
																		"nodeType": "ExpressionStatement",
																		"src": "4131:21:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 284,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 282,
																				"name": "sectionIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 347,
																				"src": "4170:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint64",
																					"typeString": "uint64"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"id": 283,
																				"name": "_sectionIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 90,
																				"src": "4185:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint64",
																					"typeString": "uint64"
																				}
																			},
																			"src": "4170:28:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint64",
																				"typeString": "uint64"
																			}
																		},
																		"id": 285,
																		"nodeType": "ExpressionStatement",
																		"src": "4170:28:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"hexValue": "74727565",
																			"id": 286,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4223:4:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		},
																		"functionReturnParameters": 103,
																		"id": 287,
																		"nodeType": "Return",
																		"src": "4216:11:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 210,
														"name": "idx",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 207,
														"src": "3665:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 211,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 93,
															"src": "3671:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
																"typeString": "uint8[] memory"
															}
														},
														"id": 212,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3671:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3665:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 291,
												"initializationExpression": {
													"assignments": [
														207
													],
													"declarations": [
														{
															"constant": false,
															"id": 207,
															"name": "idx",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 291,
															"src": "3651:8:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 206,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "3651:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 209,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 208,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3662:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3651:12:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 215,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3681:5:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 214,
															"name": "idx",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 207,
															"src": "3681:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 216,
													"nodeType": "ExpressionStatement",
													"src": "3681:5:0"
												},
												"nodeType": "ForStatement",
												"src": "3646:606:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 292,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															378,
															379
														],
														"referencedDeclaration": 378,
														"src": "4329:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4329:8:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 294,
												"nodeType": "ExpressionStatement",
												"src": "4329:8:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "d459fc46",
									"id": 296,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "SetCheckpoint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"name": "_recentNumber",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 296,
												"src": "1637:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 83,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1637:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 86,
												"name": "_recentHash",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 296,
												"src": "1665:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 85,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1665:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 88,
												"name": "_hash",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 296,
												"src": "1694:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 87,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1694:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 90,
												"name": "_sectionIndex",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 296,
												"src": "1717:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 89,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1717:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"name": "v",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 296,
												"src": "1747:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
													"typeString": "uint8[]"
												},
												"typeName": {
													"baseType": {
														"id": 91,
														"name": "uint8",
														"nodeType": "ElementaryTypeName",
														"src": "1747:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 92,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "1747:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
														"typeString": "uint8[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"name": "r",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 296,
												"src": "1773:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 94,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "1773:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 95,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "1773:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 296,
												"src": "1801:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 97,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "1801:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 98,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "1801:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1627:193:0"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 296,
												"src": "1853:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 101,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1853:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1852:6:0"
									},
									"scope": 358,
									"src": "1605:2739:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 337,
										"nodeType": "Block",
										"src": "4507:190:0",
										"statements": [
											{
												"assignments": [
													306
												],
												"declarations": [
													{
														"constant": false,
														"id": 306,
														"name": "ret",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 337,
														"src": "4517:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 304,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4517:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 305,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "4517:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 313,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 310,
																"name": "adminList",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 345,
																"src": "4554:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_storage",
																	"typeString": "address[] storage ref"
																}
															},
															"id": 311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "4554:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 309,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "4540:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_$",
															"typeString": "function (uint256) pure returns (address[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 307,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4544:7:0",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 308,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "4544:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														}
													},
													"id": 312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4540:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4517:54:0"
											},
											{
												"body": {
													"id": 333,
													"nodeType": "Block",
													"src": "4625:46:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 331,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 325,
																		"name": "ret",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 306,
																		"src": "4639:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	},
																	"id": 327,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 326,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 315,
																		"src": "4643:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4639:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 328,
																		"name": "adminList",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 345,
																		"src": "4648:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 330,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 329,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 315,
																		"src": "4658:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4648:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4639:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 332,
															"nodeType": "ExpressionStatement",
															"src": "4639:21:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 318,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "4598:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 319,
															"name": "adminList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 345,
															"src": "4602:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 320,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "4602:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4598:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 334,
												"initializationExpression": {
													"assignments": [
														315
													],
													"declarations": [
														{
															"constant": false,
															"id": 315,
															"name": "i",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 334,
															"src": "4586:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 314,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "4586:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 317,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 316,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4595:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4586:10:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 323,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4620:3:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 322,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "4620:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 324,
													"nodeType": "ExpressionStatement",
													"src": "4620:3:0"
												},
												"nodeType": "ForStatement",
												"src": "4581:90:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 335,
													"name": "ret",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 306,
													"src": "4687:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"functionReturnParameters": 301,
												"id": 336,
												"nodeType": "Return",
												"src": "4680:10:0"
											}
										]
									},
									"documentation": "@dev Get all admin addresses\n@return address list",
									"functionSelector": "45848dfc",
									"id": 338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "GetAllAdmin",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4450:2:0"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 338,
												"src": "4485:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 298,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4485:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 299,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "4485:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4484:18:0"
									},
									"scope": 358,
									"src": "4430:267:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 342,
									"name": "admins",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 358,
									"src": "4818:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 341,
										"keyType": {
											"id": 339,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4826:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4818:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 340,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "4837:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 345,
									"name": "adminList",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 358,
									"src": "4924:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 343,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4924:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 344,
										"length": null,
										"nodeType": "ArrayTypeName",
										"src": "4924:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 347,
									"name": "sectionIndex",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 358,
									"src": "4982:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 346,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "4982:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 349,
									"name": "height",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 358,
									"src": "5078:11:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 348,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "5078:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 351,
									"name": "hash",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 358,
									"src": "5145:12:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 350,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "5145:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 353,
									"name": "sectionSize",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 358,
									"src": "5309:16:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 352,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "5309:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 355,
									"name": "processConfirms",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 358,
									"src": "5634:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 354,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "5634:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 357,
									"name": "threshold",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 358,
									"src": "5725:14:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 356,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "5725:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								}
							],
							"scope": 359,
							"src": "211:5531:0"
						}
					],
					"src": "0:5743:0"
				},
				"id": 0
			}
		}
	}
}